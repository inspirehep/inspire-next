# The next version of INSPIRE.
# If you are updating this file (eg. adding entry points) don't forget to update
# setup.py which is used for setting up docker environment. The guide how to do it might
# be found here: https://python-poetry.org/docs/pyproject/

[tool.poetry]
name = "Inspirehep"
version = "0.1.0"
description = "The next version of INSPIRE."
license = "GPLv3"
classifiers = ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Software Development :: Libraries :: Python Modules"]
authors = ["CERN <admin@inspirehep.net>"]
readme = "README.rst"

[tool.poetry.dependencies]
python = ">=2.7,<3.0"
babel = "==2.*,>=2.0.0,>=2.5.1"
backoff = "==1.*,>=1.0.0,>=1.4.3"
"backports.tempfile" = ">=1.0rc1"
celery = "==4.4.2"
click = "<7.0,==6.*,>=6.7.0"
click-spinner = "==0.*,>=0.0.0,>=0.1.8"
coverage = {version = "==4.*,>=4.0.0,>=4.5.4", optional = true}
docutils = {version = "<0.16,==0.*,>=0.15.0,>=0.15.2", optional = true}
elasticsearch = {version = "==7.1.0"}
enum34 = "==1.*,>=1.0.0,>=1.1.6"
flake8-future-import = {version = "==0.*,>=0.0.0,>=0.4.3", optional = true}
flask = "==0.*,>=0.0.0,>=0.12.4"
flask-breadcrumbs = "==0.*,>=0.0.0,>=0.4.0"
flask-celeryext = "==0.*,>=0.0.0,>=0.3.1"
flask-gravatar = "==0.*,>=0.0.0,>=0.4.2"
flask-login = "==0.*,>=0.0.0,>=0.4.0, <0.5.0"
flask-shell-ipython = "==0.3.1"
flower = {version = "==0.*,>=0.0.0,>=0.9.2", optional = true}
freezegun = {version = "==0.*,>=0.3.0,>=0.3.11", optional = true}
fs = "==0.*,>=0.0.0,>=0.5.4"
gunicorn = {version = "==19.*,>=19.0.0,>=19.7.1", optional = true}
honcho = {version = "==1.*,>=1.0.0,>=1.0.1", optional = true}
inspire-dojson = "==63.*,>=63.1.0"
inspire-json-merger = "^11.0.37"
inspire-matcher = "^9.0.15"
inspire-query-parser = "6.0.37"
inspire-schemas = {git = "https://github.com/inspirehep/inspire-schemas.git", branch = "py-2"}
inspire-service-orcid = "==9.*,>=9.0.0"
inspire-utils = "^3.0.63"
invenio-access = "==1.3.0"
invenio-accounts = "==1.1.1"
invenio-admin = "==1.1.2"
invenio-assets = "1.1.3"
invenio-base = "==1.2.0"
invenio-cache = "==1.0.0"
invenio-celery = "==1.1.0"
invenio-classifier = {git = "https://github.com/inveniosoftware-contrib/invenio-classifier", tag = "v1.3.3"}
invenio-config = "==1.0.2"
invenio-db = {version = "==1.0.4", extras = ["postgresql", "versioning"]}
invenio-files-rest = "==1.0.5"
invenio-indexer = "==1.1.1"
invenio-jsonschemas = "==1.0.1"
invenio-mail = "==1.0.2"
invenio-oauth2server = "==1.0.4"
invenio-oaiharvester = "==1.0.0a4"
invenio-oauthclient = "==1.1.3"
invenio-pidstore = "==1.1.0"
invenio-records = "==1.1.1"
invenio-records-files = "==1.2.1"
invenio-records-rest = "==1.6.4"
invenio-records-ui = "==1.0.1"
invenio-rest = "==1.1.3"
invenio-search = {version = "==1.2.3", extras = ["elasticsearch7"]}
invenio-userprofiles = "==1.0.1"
invenio-workflows = "==7.*,>=7.0.0,>=7.0.1"
invenio-workflows-files = "==1.*,>=1.0.0"
ipdb = {version = "==0.*,>=0.0.0,>=0.10.3", optional = true}
jinja2 = "==2.*,>=2.0.0,>=2.10"
jsonschema = "==2.*,>=2.0.0,>=2.6.0"
kombu = "!=4.6.5,>4.5"
langdetect = "==1.*,>=1.0.0,>=1.0.7"
marshmallow = "==2.*,>=2.0.0,>=2.15.0"
mock = {version = "==2.*,>=2.0.0", optional = true}
munkres = "<1.1.0,==1.0.*,>=1.0.12"
numpy = "==1.*,>=1.0.0,>=1.14.3"
oauthlib = "<3.0.0,>=1.1.2"
plotextractor = ">=0.3.3,<1.0"
pybtex = "==0.22"
pyopenssl = "==17.*,>=17.0.0,>=17.5.0"
pytest = {version = "==3.*,>=3.0.0,>=3.3.0", optional = true}
pytest-cov = {version = "==2.*,>=2.0.0,>=2.5.1", optional = true}
pytest-vcr = {version = "==0.*,>=0.0.0,>=0.3.0", optional = true}
python-redis-lock = "==3.*,>=3.0.0,>=3.2.0"
pytz = "==2018.*,>=2018.7,>=2018.7.0"
pyyaml = "<6.0"
raven = {version = "==6.*,>=6.0.0,>=6.2.1", extras = ["flask"]}
requests = "==2.*,>=2.0.0,>=2.18.4"
requests-mock = {version = "==1.*,>=1.0.0,>=1.3.0", optional = true}
rt = "^1.0"
setproctitle = "==1.*,>=1.0.0,>=1.1.10"
sphinx = {version = "<1.6,==1.*,>=1.0.0,>=1.5.6", optional = true}
sqlalchemy = "==1.*,>=1.0.0,>=1.2.5"
sqlalchemy-continuum = "==1.3.9"
superlance = {version = "==1.*,>=1.0.0", optional = true}
timeout-decorator = "==0.*,>=0.0.0,>=0.4.0"
tornado = {version = "==4.*,>=4.0.0,>=4.5.3", optional = true}
twisted = "<19.0.0,==18.9.*,>=18.9.0"
urllib3 = "<1.25,==1.*,>=1.0.0,>=1.24.1"
vine = "==1.*,>=1.0.0"
workflow = "==2.*,>=2.0.0,>=2.1.3"

refextract = "^0.2.27"
sword2 = {git ="https://github.com/inspirehep/python-client-sword2.git"}
dictdiffer = {git ="https://github.com/inspirehep/dictdiffer.git"}
flask-sqlalchemy = {git = "https://github.com/inspirehep/flask-sqlalchemy.git", rev = "71abd94a1e2317a1365a25a31e719dbd9aafceea"}
timeexecution = {git= "https://github.com/puntonim/py-timeexecution.git", branch = "lazy-init-tmp-3.4.0"}
invenio-xrootd = {version = ">=1.0.0a6", optional = true}
xrootdpyfs = {git = "https://github.com/inspirehep/xrootdpyfs.git", optional = true}
fuzzy = "1.1"
pylatexenc = "^2.7"
ipaddress = "1.0.23"
parsel = "^1.6.0"
hepcrawl = "^13.0.58"
PyYAML = "<6.0"
cryptography = "^3.3.2"
inspire-crawler = {git = "https://github.com/inspirehep/inspire-crawler.git", rev = "3.0.10"}
cffi = "1.15.1"
inspire-idutils = "^1.2.4"
invenio-workflows-ui = {git = "https://github.com/inveniosoftware-contrib/invenio-workflows-ui.git", rev = "v2.1.0"}

[tool.poetry.extras]
all = ["coverage", "docutils", "flake8-future-import", "flower", "freezegun", "gunicorn", "hepcrawl", "honcho", "ipdb", "mock", "pytest", "pytest-cov", "pytest-vcr", "requests-mock", "sphinx", "superlance", "tornado"]
tests = ["coverage", "flake8-future-import", "freezegun", "mock", "pytest", "pytest-cov", "pytest-vcr", "requests-mock"]
docs = ["docutils", "sphinx"]
worker-node = ["flower", "superlance", "tornado"]
web-node = ["gunicorn", "honcho"]
crawler-node = ["hepcrawl"]
build-node = ["ipdb"]
xrootd = ["xrootdpyfs", "invenio-xrootd"]

[tool.poetry.scripts]
inspirehep = "inspirehep.cli:cli"

[tool.poetry.plugins."invenio_access.actions"]
admin_holdingpen_authors = "inspirehep.modules.authors.permissions:action_admin_holdingpen_authors"
editor_use_api = "inspirehep.modules.editor.permissions:action_editor_use_api"
migrator-use-api = "inspirehep.modules.migrator.permissions:action_migrator_use_api"
update_collection = "inspirehep.modules.records.permissions:action_update_collection"
view_restricted_collection = "inspirehep.modules.records.permissions:action_view_restricted_collection"

[tool.poetry.plugins."invenio_assets.bundles"]
almondjs = "inspirehep.modules.theme.bundles:almondjs"
inspirehep_author_profile_js = "inspirehep.modules.authors.bundles:js"
inspirehep_author_update_css = "inspirehep.modules.authors.bundles:update_css"
inspirehep_authors_update_form_js = "inspirehep.modules.authors.bundles:updatejs"
inspirehep_detailed_js = "inspirehep.modules.theme.bundles:detailedjs"
inspirehep_editor_js = "inspirehep.modules.editor.bundles:js"
inspirehep_forms_css = "inspirehep.modules.forms.bundles:css"
inspirehep_forms_js = "inspirehep.modules.forms.bundles:js"
inspirehep_holding_css = "inspirehep.modules.theme.bundles:holding_pen_css"
inspirehep_holding_js = "inspirehep.modules.workflows.bundles:details_js"
inspirehep_landing_page_css = "inspirehep.modules.theme.bundles:landing_page_css"
inspirehep_literaturesuggest_js = "inspirehep.modules.literaturesuggest.bundles:js"
inspirehep_theme_css = "inspirehep.modules.theme.bundles:css"
inspirehep_theme_js = "inspirehep.modules.theme.bundles:js"
inspirehep_tools_authorlist_js = "inspirehep.modules.tools.bundles:js"
invenio_search_ui_search_js = "inspirehep.modules.search.bundles:js"
requirejs = "inspirehep.modules.theme.bundles:requirejs"

[tool.poetry.plugins."invenio_base.api_apps"]
inspire_records = "inspirehep.modules.records.ext:InspireRecords"
inspire_search = "inspirehep.modules.search:InspireSearch"
inspire_accounts = "inspirehep.modules.accounts:InspireAccounts"
inspire_utils = "inspirehep.utils.ext:INSPIREUtils"
inspire_workflows = "inspirehep.modules.workflows:InspireWorkflows"

[tool.poetry.plugins."invenio_base.api_blueprints"]
inspirehep_editor = "inspirehep.modules.editor:blueprint_api"
inspirehep_records = "inspirehep.modules.records.views:blueprint"
inspire_migrator = "inspirehep.modules.migrator.views:blueprint"
inspire_submissions = "inspirehep.modules.submissions.views:blueprint"

[tool.poetry.plugins."invenio_base.apps"]
inspire_arxiv = "inspirehep.modules.arxiv:InspireArXiv"
inspire_authors = "inspirehep.modules.authors:InspireAuthors"
inspire_crossref = "inspirehep.modules.crossref:InspireCrossref"
inspire_fixtures = "inspirehep.modules.fixtures:InspireFixtures"
inspire_forms = "inspirehep.modules.forms:InspireForms"
inspirehep_logger = "inspirehep.modules.logger:InspireLogger"
inspire_literaturesuggest = "inspirehep.modules.literaturesuggest:InspireLiteratureSuggest"
inspire_migrator = "inspirehep.modules.migrator:InspireMigrator"
inspire_orcid = "inspirehep.modules.orcid:InspireOrcid"
inspire_records = "inspirehep.modules.records.ext:InspireRecords"
inspire_search = "inspirehep.modules.search:InspireSearch"
inspire_theme = "inspirehep.modules.theme:INSPIRETheme"
inspire_tools = "inspirehep.modules.tools:InspireTools"
inspire_utils = "inspirehep.utils.ext:INSPIREUtils"
inspire_workflows = "inspirehep.modules.workflows:InspireWorkflows"

[tool.poetry.plugins."invenio_base.blueprints"]
inspirehep_editor = "inspirehep.modules.editor:blueprint"

[tool.poetry.plugins."invenio_config.module"]
inspirehep = "inspirehep.config"
inspirehep_logger = "inspirehep.modules.logger.config"
inspire_workflows = "inspirehep.modules.workflows.config"

[tool.poetry.plugins."invenio_celery.tasks"]
inspire_migrator = "inspirehep.modules.migrator.tasks"
inspire_orcid = "inspirehep.modules.orcid.tasks"
inspire_records = "inspirehep.modules.records.tasks"
inspire_refextract = "inspirehep.modules.refextract.tasks"

[tool.poetry.plugins."invenio_db.alembic"]
inspirehep = "inspirehep:alembic"

[tool.poetry.plugins."invenio_db.models"]
inspire_workflows_audit = "inspirehep.modules.workflows.models"

[tool.poetry.plugins."invenio_jsonschemas.schemas"]
inspire_records = "inspire_schemas"

[tool.poetry.plugins."invenio_pidstore.fetchers"]
inspire_recid_fetcher = "inspirehep.modules.pidstore.fetchers:inspire_recid_fetcher"

[tool.poetry.plugins."invenio_pidstore.minters"]
inspire_recid_minter = "inspirehep.modules.pidstore.minters:inspire_recid_minter"

[tool.poetry.plugins."invenio_search.mappings"]
holdingpen = "inspirehep.modules.workflows.mappings"

[tool.poetry.plugins."invenio_workflows.workflows"]
article = "inspirehep.modules.workflows.workflows:Article"
author = "inspirehep.modules.workflows.workflows:Author"
manual_merge = "inspirehep.modules.workflows.workflows:ManualMerge"
edit_article = "inspirehep.modules.workflows.workflows:EditArticle"
core_selection = "inspirehep.modules.workflows.workflows:CoreSelection"

[tool.poetry.plugins."invenio_workflows_ui.actions"]
author_approval = "inspirehep.modules.workflows.actions.author_approval:AuthorApproval"
hep_approval = "inspirehep.modules.workflows.actions.hep_approval:HEPApproval"
core_selection_approval = "inspirehep.modules.workflows.actions.core_selection_approval:CoreSelectionApproval"
merge_approval = "inspirehep.modules.workflows.actions.merge_approval:MergeApproval"
match_approval = "inspirehep.modules.workflows.actions.match_approval:MatchApproval"

[build-system]
requires = ["setuptools >= 40.6.0", "wheel"]
build-backend = "setuptools.build_meta"
