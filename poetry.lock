[[package]]
name = "alabaster"
version = "0.7.12"
description = "A configurable sidebar-enabled Sphinx theme"
category = "main"
optional = true
python-versions = "*"

[[package]]
name = "alembic"
version = "1.4.0"
description = "A database migration tool for SQLAlchemy."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[package.dependencies]
Mako = "*"
python-dateutil = "*"
SQLAlchemy = ">=1.1.0"
python-editor = ">=0.3"

[[package]]
name = "amqp"
version = "2.6.0"
description = "Low-level AMQP client for Python (fork of amqplib)."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[package.dependencies]
vine = ">=1.1.3,<5.0.0a1"

[[package]]
name = "appnope"
version = "0.1.0"
description = "Disable App Nap on OS X 10.9"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "argcomplete"
version = "1.11.1"
description = "Bash tab completion for argparse"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
importlib-metadata = {version = ">=0.23,<2", markers = "python_version == \"2.7\""}

[package.extras]
test = ["coverage", "flake8", "pexpect", "wheel"]

[[package]]
name = "arrow"
version = "0.15.5"
description = "Better dates & times for Python"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[package.dependencies]
python-dateutil = "*"
"backports.functools-lru-cache" = {version = ">=1.2.1", markers = "python_version == \"2.7\""}

[[package]]
name = "atomicwrites"
version = "1.3.0"
description = "Atomic file writes."
category = "main"
optional = true
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "attrs"
version = "19.3.0"
description = "Classes Without Boilerplate"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[package.extras]
docs = ["sphinx", "zope.interface"]
tests = ["coverage", "hypothesis", "pympler", "pytest (>=4.3.0)", "six", "zope.interface"]
azure-pipelines = ["coverage", "hypothesis", "pympler", "pytest (>=4.3.0)", "six", "zope.interface", "pytest-azurepipelines"]
dev = ["coverage", "hypothesis", "pympler", "pytest (>=4.3.0)", "six", "zope.interface", "sphinx", "pre-commit"]

[[package]]
name = "automat"
version = "20.2.0"
description = "Self-service finite-state machines for the programmer on the go."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
six = "*"
attrs = ">=19.2.0"

[package.extras]
visualize = ["graphviz (>0.5.1)", "Twisted (>=16.1.1)"]

[[package]]
name = "autosemver"
version = "0.5.5"
description = "Tools to handle automatic semantic versioning in python"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
dulwich = ">=0.19.6,<0.20"

[[package]]
name = "babel"
version = "2.8.0"
description = "Internationalization utilities"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[package.dependencies]
pytz = ">=2015.7"

[[package]]
name = "backoff"
version = "1.10.0"
description = "Function decoration for backoff and retry"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[[package]]
name = "backports-abc"
version = "0.5"
description = "A backport of recent additions to the 'collections.abc' module."
category = "main"
optional = true
python-versions = "*"

[[package]]
name = "backports.functools-lru-cache"
version = "1.6.1"
description = "Backport of functools.lru_cache"
category = "main"
optional = false
python-versions = ">=2.6"

[package.extras]
docs = ["sphinx", "jaraco.packaging (>=3.2)", "rst.linker (>=1.9)"]
testing = ["pytest (>=3.5,!=3.7.3)", "pytest-checkdocs (>=1.2.3)", "pytest-flake8", "pytest-black-multipy", "pytest-cov"]

[[package]]
name = "backports.shutil-get-terminal-size"
version = "1.0.0"
description = "A backport of the get_terminal_size function from Python 3.3's shutil."
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "backports.tempfile"
version = "1.0"
description = "Backport of new features in Python's tempfile module"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
"backports.weakref" = "*"

[[package]]
name = "backports.weakref"
version = "1.0.post1"
description = "Backport of new features in Python's weakref module"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "base32-lib"
version = "1.0.1"
description = "Small library to generate, encode and decode random base32 strings."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
six = ">=1.10"

[package.extras]
docs = ["Sphinx (>=1.4.2)"]
all = ["Sphinx (>=1.4.2)", "check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.2.2)", "pydocstyle (>=1.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest-runner (>=2.7.0)", "pytest (>=3.6.0)"]
tests = ["check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.2.2)", "pydocstyle (>=1.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest-runner (>=2.7.0)", "pytest (>=3.6.0)"]

[[package]]
name = "beautifulsoup4"
version = "4.8.2"
description = "Screen-scraping library"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
soupsieve = ">=1.2"

[package.extras]
lxml = ["lxml"]
html5lib = ["html5lib"]

[[package]]
name = "billiard"
version = "3.6.3.0"
description = "Python multiprocessing fork with improvements and bugfixes"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "binaryornot"
version = "0.4.4"
description = "Ultra-lightweight pure Python package to check if a file is binary or text."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
chardet = ">=3.0.2"

[[package]]
name = "bleach"
version = "3.2.1"
description = "An easy safelist-based HTML-sanitizing tool."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[package.dependencies]
packaging = "*"
webencodings = "*"
six = ">=1.9.0"

[[package]]
name = "blinker"
version = "1.4"
description = "Fast, simple object-to-object and broadcast signaling"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "boto3"
version = "1.14.61"
description = "The AWS SDK for Python"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
jmespath = ">=0.7.1,<1.0.0"
botocore = ">=1.17.61,<1.18.0"
s3transfer = ">=0.3.0,<0.4.0"

[[package]]
name = "botocore"
version = "1.17.61"
description = "Low-level, data-driven core of boto 3."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
python-dateutil = ">=2.1,<3.0.0"
docutils = ">=0.10,<0.16"
jmespath = ">=0.7.1,<1.0.0"
urllib3 = {version = ">=1.20,<1.26", markers = "python_version != \"3.4\""}

[[package]]
name = "bump2version"
version = "0.5.11"
description = "Version-bump your software with a single command!"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[[package]]
name = "celery"
version = "4.4.2"
description = "Distributed Task Queue."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*,"

[package.dependencies]
pytz = ">0.0-dev"
billiard = ">=3.6.3.0,<4.0"
vine = "1.3.0"
kombu = ">=4.6.8,<4.7"

[package.extras]
redis = ["redis (>=3.2.0)"]
consul = ["python-consul"]
zookeeper = ["kazoo (>=1.3.1)"]
brotli = ["brotli (>=1.0.0)", "brotlipy (>=0.7.0)"]
gevent = ["gevent"]
azureblockblob = ["azure-storage (==0.36.0)", "azure-common (==1.1.5)", "azure-storage-common (==1.1.0)"]
cassandra = ["cassandra-driver"]
lzma = ["backports.lzma"]
msgpack = ["msgpack"]
eventlet = ["eventlet (>=0.24.1)"]
s3 = ["boto3 (>=1.9.125)"]
couchdb = ["pycouchdb"]
arangodb = ["pyArango (>=1.3.2)"]
dynamodb = ["boto3 (>=1.9.178)"]
yaml = ["PyYAML (>=3.10)"]
sqs = ["boto3 (>=1.9.125)", "pycurl (==7.43.0.2)"]
zstd = ["zstandard"]
riak = ["riak (>=2.0)"]
sqlalchemy = ["sqlalchemy"]
librabbitmq = ["librabbitmq (>=1.5.0)"]
mongodb = ["pymongo[srv] (>=3.3.0)"]
pymemcache = ["python-memcached"]
auth = ["cryptography"]
slmq = ["softlayer-messaging (>=1.0.3)"]
solar = ["ephem"]
cosmosdbsql = ["pydocumentdb (==2.3.2)"]
tblib = ["tblib (>=1.3.0)", "tblib (>=1.5.0)"]
couchbase = ["couchbase", "couchbase-cffi"]
django = ["Django (>=1.11)"]
pyro = ["pyro4"]
memcache = ["pylibmc"]
elasticsearch = ["elasticsearch"]

[[package]]
name = "certifi"
version = "2019.11.28"
description = "Python package for providing Mozilla's CA Bundle."
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "cffi"
version = "1.15.1"
description = "Foreign Function Interface for Python calling C code."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
pycparser = "*"

[[package]]
name = "chardet"
version = "3.0.4"
description = "Universal encoding detector for Python 2 and 3"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "click"
version = "6.7"
description = "A simple wrapper around optparse for powerful command line utilities."
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "click-spinner"
version = "0.1.8"
description = "Spinner for Click"
category = "main"
optional = false
python-versions = "*"

[package.extras]
test = ["click", "pytest", "six"]

[[package]]
name = "colorama"
version = "0.4.3"
description = "Cross-platform colored terminal text."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[[package]]
name = "configobj"
version = "5.0.6"
description = "Config file reading, writing and validation."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
six = "*"

[[package]]
name = "configparser"
version = "4.0.2"
description = "Updated configparser from Python 3.7 for Python 2.6+."
category = "main"
optional = false
python-versions = ">=2.6"

[package.extras]
docs = ["sphinx", "jaraco.packaging (>=3.2)", "rst.linker (>=1.9)"]
testing = ["pytest (>=3.5,!=3.7.3)", "pytest-checkdocs (>=1.2)", "pytest-flake8", "pytest-black-multipy"]

[[package]]
name = "constantly"
version = "15.1.0"
description = "Symbolic constants in Python"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "contextlib2"
version = "0.6.0.post1"
description = "Backports and enhancements for the contextlib module"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "cookiecutter"
version = "1.6.0"
description = "A command-line utility that creates projects from project templates, e.g. creating a Python package project from a Python package project template."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
poyo = ">=0.1.0"
jinja2-time = ">=0.1.0"
jinja2 = ">=2.7"
whichcraft = ">=0.4.0"
requests = ">=2.18.0"
future = ">=0.15.2"
binaryornot = ">=0.2.0"
click = ">=5.0"

[[package]]
name = "coverage"
version = "4.5.4"
description = "Code coverage measurement for Python"
category = "main"
optional = true
python-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*, <4"

[[package]]
name = "cryptography"
version = "3.3.2"
description = "cryptography is a package which provides cryptographic recipes and primitives to Python developers."
category = "main"
optional = false
python-versions = ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*"

[package.dependencies]
enum34 = {version = "*", markers = "python_version < \"3\""}
ipaddress = {version = "*", markers = "python_version < \"3\""}
six = ">=1.4.1"
cffi = ">=1.12"

[package.extras]
test = ["pytest (>=3.6.0,!=3.9.0,!=3.9.1,!=3.9.2)", "pretend", "iso8601", "pytz", "hypothesis (>=1.11.4,!=3.79.2)"]
pep8test = ["black", "flake8", "flake8-import-order", "pep8-naming"]
docstest = ["doc8", "pyenchant (>=1.6.11)", "twine (>=1.12.0)", "sphinxcontrib-spelling (>=4.0.1)"]
ssh = ["bcrypt (>=3.1.5)"]
docs = ["sphinx (>=1.6.5,!=1.8.0,!=3.1.0,!=3.1.1)", "sphinx-rtd-theme"]

[[package]]
name = "cssselect"
version = "1.1.0"
description = "cssselect parses CSS3 Selectors and translates them to XPath 1.0"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "decorator"
version = "4.4.1"
description = "Decorators for Humans"
category = "main"
optional = false
python-versions = ">=2.6, !=3.0.*, !=3.1.*"

[[package]]
name = "dictdiffer"
version = "0.7.2.dev20180504"
description = "Dictdiffer is a library that helps you to diff and patch dictionaries."
category = "main"
optional = false
python-versions = "*"
develop = true

[package.extras]
docs = ["Sphinx (>=1.4.4)", "sphinx-rtd-theme (>=0.1.9)"]
all = ["Sphinx (>=1.4.4)", "check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.2.2)", "mock (>=1.3.0)", "numpy (>=1.11.0)", "pydocstyle (>=1.0.0)", "pytest (>=2.8.0)", "pytest-cache (>=1.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "sphinx-rtd-theme (>=0.1.9)"]
numpy = ["numpy (>=1.11.0)"]
tests = ["check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.2.2)", "mock (>=1.3.0)", "pydocstyle (>=1.0.0)", "pytest (>=2.8.0)", "pytest-cache (>=1.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)"]

[package.source]
type = "git"
url = "https://github.com/inspirehep/dictdiffer.git"
reference = "master"

[[package]]
name = "docutils"
version = "0.15.2"
description = "Docutils -- Python Documentation Utilities"
category = "main"
optional = false
python-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "dojson"
version = "1.4.0"
description = "DoJSON is a simple Pythonic JSON to JSON converter."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
lxml = ">=3.4"
click = ">=5.0.0"
simplejson = ">=3.8.1"

[package.extras]
docs = ["Sphinx (>=1.5.2)"]
all = ["Sphinx (>=1.5.2)", "check-manifest (>=0.25)", "coverage (>=4.0)", "coverage (>=4.0.0)", "isort (>=4.2.2)", "jsonschema (>=2.5.1)", "mock (>=1.0.0)", "pydocstyle (>=1.0.0)", "pytest-cache (>=1.0)", "pytest-cov (>=2.1.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)", "jsonschema (>=2.5.1)", "Sphinx (>=1.5.2)", "check-manifest (>=0.25)", "coverage (>=4.0)", "coverage (>=4.0.0)", "isort (>=4.2.2)", "jsonschema (>=2.5.1)", "mock (>=1.0.0)", "pydocstyle (>=1.0.0)", "pytest-cache (>=1.0)", "pytest-cov (>=2.1.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)", "jsonschema (>=2.5.1)"]
tests = ["check-manifest (>=0.25)", "coverage (>=4.0)", "coverage (>=4.0.0)", "isort (>=4.2.2)", "jsonschema (>=2.5.1)", "mock (>=1.0.0)", "pydocstyle (>=1.0.0)", "pytest-cache (>=1.0)", "pytest-cov (>=2.1.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)"]
jsonschema = ["jsonschema (>=2.5.1)"]

[[package]]
name = "dulwich"
version = "0.19.15"
description = "Python Git Library"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
certifi = "*"
urllib3 = ">=1.24.1"

[package.extras]
fastimport = ["fastimport"]
pgp = ["gpg"]
https = ["urllib3[secure] (>=1.24.1)"]

[[package]]
name = "editdistance"
version = "0.5.3"
description = "Fast implementation of the edit distance(Levenshtein distance)"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "elasticsearch"
version = "7.1.0"
description = "Python client for Elasticsearch"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
urllib3 = ">=1.21.1"

[package.extras]
requests = ["requests (>=2.4.0,<3.0.0)"]
develop = ["requests (>=2.0.0,<3.0.0)", "nose", "coverage", "mock", "pyaml", "nosexcover", "sphinx (<1.7)", "sphinx-rtd-theme"]

[[package]]
name = "elasticsearch-dsl"
version = "7.1.0"
description = "Python client for Elasticsearch"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[package.dependencies]
python-dateutil = "*"
ipaddress = {version = "*", markers = "python_version < \"3.3\""}
six = "*"
elasticsearch = ">=7.0.0,<8.0.0"

[package.extras]
develop = ["mock", "pytest (>=3.0.0)", "pytest-cov", "pytest-mock", "pytz", "coverage (<5.0.0)", "sphinx", "sphinx-rtd-theme"]

[[package]]
name = "entrypoints"
version = "0.3"
description = "Discover and load entry points from installed packages."
category = "main"
optional = true
python-versions = ">=2.7"

[package.dependencies]
configparser = {version = ">=3.5", markers = "python_version == \"2.7\""}

[[package]]
name = "enum34"
version = "1.1.6"
description = "Python 3.4 Enum backported to 3.3, 3.2, 3.1, 2.7, 2.6, 2.5, and 2.4"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "flake8"
version = "3.7.9"
description = "the modular source code checker: pep8, pyflakes and co"
category = "main"
optional = true
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[package.dependencies]
entrypoints = ">=0.3.0,<0.4.0"
pyflakes = ">=2.1.0,<2.2.0"
enum34 = {version = "*", markers = "python_version < \"3.4\""}
typing = {version = "*", markers = "python_version < \"3.5\""}
mccabe = ">=0.6.0,<0.7.0"
pycodestyle = ">=2.5.0,<2.6.0"
functools32 = {version = "*", markers = "python_version < \"3.2\""}
configparser = {version = "*", markers = "python_version < \"3.2\""}

[[package]]
name = "flake8-future-import"
version = "0.4.6"
description = "__future__ import checker, plugin for flake8"
category = "main"
optional = true
python-versions = "*"

[package.dependencies]
flake8 = "*"

[[package]]
name = "flask"
version = "0.12.5"
description = "A microframework based on Werkzeug, Jinja2 and good intentions"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
itsdangerous = ">=0.21"
Jinja2 = ">=2.4"
click = ">=2.0"
Werkzeug = ">=0.7,<1.0"

[[package]]
name = "flask-admin"
version = "1.5.5"
description = "Simple and extensible admin interface framework for Flask"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Flask = ">=0.7"
wtforms = "*"

[package.extras]
azure = ["azure-storage-blob"]
aws = ["boto"]

[[package]]
name = "flask-alembic"
version = "2.0.1"
description = "Flask extension to integrate Alembic migrations"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Flask = ">=0.10"
SQLAlchemy = "*"
Flask-SQLAlchemy = "*"
alembic = ">=0.8"

[[package]]
name = "flask-assets"
version = "2.0"
description = "Asset management for Flask, to compress and merge CSS and Javascript files."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Flask = ">=0.8"
webassets = ">=2.0"

[[package]]
name = "flask-babelex"
version = "0.9.4"
description = "Adds i18n/l10n support to Flask applications"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Flask = "*"
Babel = ">=1.0"
speaklater = ">=1.2"
Jinja2 = ">=2.5"

[[package]]
name = "flask-breadcrumbs"
version = "0.4.0"
description = "Flask-Breadcrumbs adds support for generating site breadcrumb navigation."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Flask = ">=0.10.0"
Flask-Menu = ">=0.2"
six = ">=1.10.0"

[package.extras]
docs = ["Sphinx (>=1.4.2)"]
all = ["Sphinx (>=1.4.2)", "check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.2.2)", "mock (>=1.0.0)", "pydocstyle (>=1.0.0)", "pytest-cache (>=1.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)", "Sphinx (>=1.4.2)", "check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.2.2)", "mock (>=1.0.0)", "pydocstyle (>=1.0.0)", "pytest-cache (>=1.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)"]
tests = ["check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.2.2)", "mock (>=1.0.0)", "pydocstyle (>=1.0.0)", "pytest-cache (>=1.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)"]

[[package]]
name = "flask-caching"
version = "1.8.0"
description = "Adds caching support to your Flask application"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Flask = "*"

[[package]]
name = "flask-celeryext"
version = "0.3.4"
description = "Flask-CeleryExt is a simple integration layer between Celery and Flask."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
celery = {version = ">=3.1", markers = "python_version < \"3.7\""}
Flask = ">=0.10"

[package.extras]
docs = ["Sphinx (>=1.4.2)"]
all = ["Sphinx (>=1.4.2)", "check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.3.4)", "pydocstyle (>=1.0.0)", "pytest-cache (>=1.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)", "pytest-mock (>=1.6.0)"]
tests = ["check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.3.4)", "pydocstyle (>=1.0.0)", "pytest-cache (>=1.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)", "pytest-mock (>=1.6.0)"]

[[package]]
name = "flask-cli"
version = "0.4.0"
description = "Backport of Flask 1.0 new click integration."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Flask = ">=0.10"
click = ">=2.0"

[package.extras]
docs = ["Sphinx (>=1.3)"]
all = ["Sphinx (>=1.3)", "check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.2.2)", "pydocstyle (>=1.0.0)", "pytest-cache (>=1.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)", "Sphinx (>=1.3)", "check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.2.2)", "pydocstyle (>=1.0.0)", "pytest-cache (>=1.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)"]
tests = ["check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.2.2)", "pydocstyle (>=1.0.0)", "pytest-cache (>=1.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)"]

[[package]]
name = "flask-collect"
version = "1.2.2"
description = "Flask-Collect -- Collect static files in Flask application"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
flask = ">=0.10.1"

[[package]]
name = "flask-cors"
version = "3.0.8"
description = "A Flask extension adding a decorator for CORS support"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Flask = ">=0.9"
Six = "*"

[[package]]
name = "flask-gravatar"
version = "0.5.0"
description = "Small extension for Flask to make usage of Gravatar service easy."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Flask = ">=0.10"

[package.extras]
docs = ["Sphinx (>=1.4.2)"]
all = ["Sphinx (>=1.4.2)", "check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.2.2)", "pydocstyle (>=1.0.0)", "pytest-cache (>=1.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)", "Sphinx (>=1.4.2)", "check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.2.2)", "pydocstyle (>=1.0.0)", "pytest-cache (>=1.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)"]
tests = ["check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.2.2)", "pydocstyle (>=1.0.0)", "pytest-cache (>=1.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)"]

[[package]]
name = "flask-kvsession"
version = "0.6.2"
description = "Transparent server-side session support for flask"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Flask = ">=0.8"
itsdangerous = ">=0.20"
six = "*"
simplekv = ">=0.9.2"
werkzeug = "*"

[[package]]
name = "flask-login"
version = "0.4.1"
description = "User session management for Flask"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Flask = "*"

[[package]]
name = "flask-mail"
version = "0.9.1"
description = "Flask extension for sending email"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Flask = "*"
blinker = "*"

[[package]]
name = "flask-menu"
version = "0.7.1"
description = "Flask-Menu is a Flask extension that adds support for generating menus."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Flask = ">=0.10.1"
six = ">=1.9.0"

[package.extras]
docs = ["sphinx (>=1.3)"]
all = ["sphinx (>=1.3)", "flask-classy (>=0.6.10)", "check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.2.2)", "pydocstyle (>=1.0.0)", "pytest (>=2.8.0)", "pytest-cache (>=1.0)", "pytest-cov (>=2.1.0)", "pytest-pep8 (>=1.0.6)"]
tests = ["flask-classy (>=0.6.10)", "check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.2.2)", "pydocstyle (>=1.0.0)", "pytest (>=2.8.0)", "pytest-cache (>=1.0)", "pytest-cov (>=2.1.0)", "pytest-pep8 (>=1.0.6)"]
classy = ["flask-classy (>=0.6.10)"]

[[package]]
name = "flask-oauthlib"
version = "0.9.5"
description = "OAuthlib for Flask"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Flask = "*"
oauthlib = ">=1.1.2,<2.0.3 || >2.0.3,<2.0.4 || >2.0.4,<2.0.5 || >2.0.5,<3.0.0"
requests-oauthlib = ">=0.6.2"

[[package]]
name = "flask-principal"
version = "0.4.0"
description = "Identity management for flask"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Flask = "*"
blinker = "*"

[[package]]
name = "flask-security"
version = "3.0.0"
description = "Simple security for Flask apps."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Flask-Login = ">=0.3.0"
Flask-Mail = ">=0.7.3"
passlib = ">=1.7"
Flask = ">=0.11"
Flask-WTF = ">=0.13.1"
Flask-BabelEx = ">=0.9.3"
Flask-Principal = ">=0.3.3"
itsdangerous = ">=0.21"

[package.extras]
docs = ["Flask-Sphinx-Themes (>=1.0.1)", "Sphinx (>=1.4.2)"]
all = ["Flask-Sphinx-Themes (>=1.0.1)", "Sphinx (>=1.4.2)", "Flask-CLI (>=0.4.0)", "Flask-Mongoengine (>=0.7.0)", "Flask-Peewee (>=0.6.5)", "Flask-SQLAlchemy (>=1.0)", "bcrypt (>=1.0.2)", "check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.2.2)", "mock (>=1.3.0)", "mongoengine (>=0.10.0)", "pony (>=0.7.1)", "pydocstyle (>=1.0.0)", "pytest-cache (>=1.0)", "pytest-cov (>=2.4.0)", "pytest-flakes (>=1.0.1)", "pytest-pep8 (>=1.0.6)", "pytest-translations (>=1.0.4)", "pytest (>=3.0.5)", "sqlalchemy (>=0.8.0)", "Flask-Sphinx-Themes (>=1.0.1)", "Sphinx (>=1.4.2)", "Flask-CLI (>=0.4.0)", "Flask-Mongoengine (>=0.7.0)", "Flask-Peewee (>=0.6.5)", "Flask-SQLAlchemy (>=1.0)", "bcrypt (>=1.0.2)", "check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.2.2)", "mock (>=1.3.0)", "mongoengine (>=0.10.0)", "pony (>=0.7.1)", "pydocstyle (>=1.0.0)", "pytest-cache (>=1.0)", "pytest-cov (>=2.4.0)", "pytest-flakes (>=1.0.1)", "pytest-pep8 (>=1.0.6)", "pytest-translations (>=1.0.4)", "pytest (>=3.0.5)", "sqlalchemy (>=0.8.0)"]
tests = ["Flask-CLI (>=0.4.0)", "Flask-Mongoengine (>=0.7.0)", "Flask-Peewee (>=0.6.5)", "Flask-SQLAlchemy (>=1.0)", "bcrypt (>=1.0.2)", "check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.2.2)", "mock (>=1.3.0)", "mongoengine (>=0.10.0)", "pony (>=0.7.1)", "pydocstyle (>=1.0.0)", "pytest-cache (>=1.0)", "pytest-cov (>=2.4.0)", "pytest-flakes (>=1.0.1)", "pytest-pep8 (>=1.0.6)", "pytest-translations (>=1.0.4)", "pytest (>=3.0.5)", "sqlalchemy (>=0.8.0)"]

[[package]]
name = "flask-shell-ipython"
version = "0.3.1"
description = "Replace default `flask shell` command by similar command running IPython."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
flask = ">=0.11"
IPython = ">=5.0.0"
click = "*"

[[package]]
name = "Flask-SQLAlchemy"
version = "2.4.0"
description = "Adds SQLAlchemy support to your Flask application."
category = "main"
optional = false
python-versions = ">= 2.7, != 3.0.*, != 3.1.*, != 3.2.*, != 3.3.*"
develop = false

[package.dependencies]
Flask = ">=0.10"
SQLAlchemy = ">=0.8.0"

[package.source]
type = "git"
url = "https://github.com/inspirehep/flask-sqlalchemy.git"
reference = "71abd94a1e2317a1365a25a31e719dbd9aafceea"
resolved_reference = "71abd94a1e2317a1365a25a31e719dbd9aafceea"

[[package]]
name = "flask-webpackext"
version = "1.0.1"
description = "Webpack integration for Flask."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Flask = ">=0.11"
pywebpack = ">=1.0.0"
pynpm = ">=0.1.1"

[package.extras]
docs = ["Sphinx (>=1.5.1)", "sphinx-click (>=1.4.0)"]
all = ["Sphinx (>=1.5.1)", "sphinx-click (>=1.4.0)", "check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.2.2)", "pydocstyle (>=1.0.0)", "pytest-cache (>=1.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)", "Sphinx (>=1.5.1)", "sphinx-click (>=1.4.0)", "check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.2.2)", "pydocstyle (>=1.0.0)", "pytest-cache (>=1.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)"]
tests = ["check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.2.2)", "pydocstyle (>=1.0.0)", "pytest-cache (>=1.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)"]

[[package]]
name = "flask-wtf"
version = "0.14.3"
description = "Simple integration of Flask and WTForms."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Flask = "*"
itsdangerous = "*"
WTForms = "*"

[[package]]
name = "flower"
version = "0.9.3"
description = "Celery Flower"
category = "main"
optional = true
python-versions = "*"

[package.dependencies]
celery = ">=3.1.0"
babel = ">=1.0,<3.0.0"
pytz = "*"
futures = {version = "*", markers = "python_version == \"2.7\""}
tornado = ">=4.2.0,<6.0.0"

[[package]]
name = "fqn-decorators"
version = "1.2.5"
description = "Easily create multi-purpose decorators that have access to the FQN of the original function."
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "freezegun"
version = "0.3.15"
description = "Let your Python tests travel through time"
category = "main"
optional = true
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[package.dependencies]
python-dateutil = ">=1.0,<2.0 || >2.0"
six = "*"

[[package]]
name = "fs"
version = "0.5.4"
description = "Filesystem abstraction layer"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
six = "*"

[[package]]
name = "ftfy"
version = "4.4.3"
description = "Fixes some problems with Unicode text after the fact"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
html5lib = "*"
wcwidth = "*"

[[package]]
name = "ftputil"
version = "3.4"
description = "High-level FTP client library (virtual file system and more)"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "funcsigs"
version = "1.0.2"
description = "Python function signatures from PEP362 for Python 2.6, 2.7 and 3.2+"
category = "main"
optional = true
python-versions = "*"

[[package]]
name = "functools32"
version = "3.2.3-2"
description = "Backport of the functools module from Python 3.2.3 for use on 2.7 and PyPy."
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "furl"
version = "2.1.0"
description = "URL manipulation made simple."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
six = ">=1.8.0"
orderedmultidict = ">=1.0.1"

[[package]]
name = "future"
version = "0.18.2"
description = "Clean single-source support for Python 3 and 2"
category = "main"
optional = false
python-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "futures"
version = "3.3.0"
description = "Backport of the concurrent.futures package from Python 3"
category = "main"
optional = false
python-versions = ">=2.6, <3"

[[package]]
name = "fuzzy"
version = "1.1"
description = "Fast Python phonetic algorithms"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "gunicorn"
version = "19.10.0"
description = "WSGI HTTP Server for UNIX"
category = "main"
optional = true
python-versions = ">=2.6, !=3.0.*, !=3.1.*"

[package.extras]
tornado = ["tornado (>=0.2)"]
gevent = ["gevent (>=0.13)"]
eventlet = ["eventlet (>=0.9.7)"]

[[package]]
name = "harvestingkit"
version = "0.6.17"
description = "Kit of tools to convert publisher XML (NLM/JATS) to MARCXML."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Unidecode = ">=0.04.14"
lxml = ">=3.1.2"
httpretty = ">=0.8.3"
argcomplete = ">=0.8.0"
six = ">=1.7.3"
HTMLParser = ">=0.0.2"
python-dateutil = ">=1.5"
beautifulsoup4 = ">=4.1.3"
requests = ">=2.2.0"

[[package]]
name = "hepcrawl"
version = "13.0.72"
description = "Scrapy project for feeds into INSPIRE-HEP (http://inspirehep.net)."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
LinkHeader = ">=0.4.3"
automat = "20.2.0"
boto3 = ">=1.14,<2.0"
scrapy-sentry = ">=0.8.0,<1.0"
Scrapy = ">=1.6,<1.7.0"
pylatexenc = ">=2.9,<3.0"
furl = ">=0.4.95"
inspire-utils = ">=3.0.0,<4.0"
python-scrapyd-api = ">=2.0.1"
amqp = ">2.2.0,<2.3.0 || >2.3.0,<3.0"
sentry-sdk = "1.3.0"
six = ">=1.9.0"
redis = ">=2.10.5"
celery = ">=4.1"
"backports.tempfile" = "1.0"
queuelib = "1.5.0"
ftputil = ">=3.3.1,<4.0"
autosemver = ">=0.2,<1.0"
structlog = "20.1.0"
Twisted = ">=18.9.0,<19.0"
inspire-schemas = ">=61.5,<62.0"
python-dateutil = ">=2.7.0,<3.0"
scrapy-crawl-once = ">=0.1.1,<1.0"
harvestingkit = ">=0.6.12"
Sickle = ">=0.6.2,<1.0"
inspire-dojson = ">=63.0,<64.0"
requests = ">=2.22.0,<3.0"
scrapyd = "1.1.0"
pyasn1 = ">=0.1.8"
scrapyd-client = ">=1.0.1"
python-logstash = "0.4.8"

[package.extras]
docs = ["Sphinx (>=1.5,<2.0)", "docutils (==0.17.1)", "sphinxcontrib-napoleon (>=0.6.1)"]
all = ["pyyaml", "Sphinx (>=1.5,<2.0)", "check-manifest (>=0.25)", "coverage (>=4.0)", "deepdiff (==3.3.0)", "docutils (==0.17.1)", "freezegun (>=0.3.9)", "isort (==4.2.2)", "mock (>=2.0.0,<3.0)", "pydocstyle (>=1.0.0)", "pytest-cov (>=2.1.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)", "requests-mock (>=1.3.0)", "sphinxcontrib-napoleon (>=0.6.1)"]
tests = ["pyyaml", "check-manifest (>=0.25)", "coverage (>=4.0)", "deepdiff (==3.3.0)", "freezegun (>=0.3.9)", "isort (==4.2.2)", "mock (>=2.0.0,<3.0)", "pydocstyle (>=1.0.0)", "pytest-cov (>=2.1.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)", "requests-mock (>=1.3.0)"]

[[package]]
name = "honcho"
version = "1.0.1"
description = "Honcho: a Python clone of Foreman. For managing Procfile-based applications."
category = "main"
optional = true
python-versions = "*"

[package.dependencies]
colorama = {version = "*", markers = "sys_platform == \"win32\""}

[package.extras]
export = ["jinja2 (>=2.7,<2.8)"]

[[package]]
name = "html5lib"
version = "1.0.1"
description = "HTML parser based on the WHATWG HTML specification"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
webencodings = "*"
six = ">=1.9"

[package.extras]
all = ["genshi", "chardet (>=2.2)", "datrie", "lxml"]
datrie = ["datrie"]
chardet = ["chardet (>=2.2)"]
lxml = ["lxml"]
genshi = ["genshi"]

[[package]]
name = "htmlparser"
version = "0.0.2"
description = "Backport of HTMLParser from python 2.7"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "httplib2"
version = "0.17.0"
description = "A comprehensive HTTP client library."
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "httpretty"
version = "0.9.7"
description = "HTTP client mock for Python"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
six = "*"

[[package]]
name = "hyperlink"
version = "19.0.0"
description = "A featureful, immutable, and correct URL for Python."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
idna = ">=2.5"

[[package]]
name = "idna"
version = "2.8"
description = "Internationalized Domain Names in Applications (IDNA)"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "idutils"
version = "1.1.11"
description = "Small library for persistent identifiers used in scholarly communication."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
six = ">=1.10"
isbnid-fork = ">=0.4.4"

[package.extras]
docs = ["Sphinx (>=3)"]
all = ["Sphinx (>=3)", "pytest-cache (>=1.0)", "pytest-runner (>=2.6.2)", "pytest-invenio (>=1.4.0)"]
tests = ["pytest-cache (>=1.0)", "pytest-runner (>=2.6.2)", "pytest-invenio (>=1.4.0)"]

[[package]]
name = "imagesize"
version = "1.2.0"
description = "Getting image size from png/jpeg/jpeg2000/gif file"
category = "main"
optional = true
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "importlib-metadata"
version = "1.5.0"
description = "Read metadata from Python packages"
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,>=2.7"

[package.dependencies]
contextlib2 = {version = "*", markers = "python_version < \"3\""}
pathlib2 = {version = "*", markers = "python_version < \"3\""}
zipp = ">=0.5"
configparser = {version = ">=3.5", markers = "python_version < \"3\""}

[package.extras]
docs = ["sphinx", "rst.linker"]
testing = ["packaging", "importlib-resources"]

[[package]]
name = "incremental"
version = "17.5.0"
description = ""
category = "main"
optional = false
python-versions = "*"

[package.extras]
scripts = ["click (>=6.0)", "twisted (>=16.4.0)"]

[[package]]
name = "infinity"
version = "1.4"
description = "All-in-one infinity value for Python. Can be compared to any object."
category = "main"
optional = false
python-versions = "*"

[package.extras]
test = ["pytest (>=2.2.3)", "Pygments (>=1.2)", "six (>=1.4.1)", "flake8 (>=2.4.0)", "isort (>=4.2.2)"]

[[package]]
name = "influxdb"
version = "5.2.3"
description = "InfluxDB client"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
python-dateutil = ">=2.6.0"
requests = ">=2.17.0"
pytz = "*"
six = ">=1.10.0"

[package.extras]
test = ["nose", "nose-cov", "mock", "requests-mock"]

[[package]]
name = "inspire-crawler"
version = "3.0.44"
description = "Crawler integration with INSPIRE-HEP."
category = "main"
optional = false
python-versions = "*"
develop = false

[package.dependencies]
invenio-search = "1.2.3"
Flask = "0.12.5"
Flask-SQLAlchemy = "rev 71abd94a1e2317a1365a25a31e719dbd9aafceea"
SQLAlchemy = "1.3.13"
Werkzeug = "0.16.1"
jsonref = "0.2"
invenio-records-rest = "1.6.4"
python-scrapyd-api = "2.1.2"
invenio-db = "1.0.4"
invenio-files-rest = "1.0.5"
invenio-workflows = "7.0.6"
celery = ">=4.1.0,<5.0"
invenio-base = "1.2.0"
itsdangerous = "<=2.0.1"
invenio-pidstore = "1.1.0"
SQLAlchemy-Continuum = "1.3.9"
autosemver = ">=0.2,<1.0"
pathlib2 = "2.3.5"
invenio-access = "1.3.0"
invenio-workflows-ui = "2.0.19"
invenio-celery = "1.1.0"
WTForms = "2.2.1"
Flask-Breadcrumbs = "0.4.0"
six = "1.14.0"
Flask-Security = "3.0.0"
ftfy = "4.4.3"
invenio-records = "1.1.1"
invenio-i18n = "1.1.1"
invenio-accounts = "1.1.1"
invenio-indexer = "1.1.1"
invenio-oaiharvester = "1.0.0a4"
jsonresolver = "0.2.1"
invenio-rest = "1.1.3"

[package.extras]
all = ["Sphinx (>=1.5,<1.6)", "check-manifest (>=0.25)", "coverage (>=4.0)", "mock (>=2.0.0,<3.0)", "pydocstyle (>=1.0.0)", "pytest (>=2.8.0)", "pytest-cache (>=1.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "requests-mock (>=1.4.0,<2.0)"]
postgresql = ["invenio-db[postgresql,versioning] (==1.0.4)", "psycopg2-binary (==2.8.4)"]
docs = ["Sphinx (>=1.5,<1.6)"]
sqlite = ["invenio-db[versioning] (==1.0.4)"]
tests = ["check-manifest (>=0.25)", "coverage (>=4.0)", "mock (>=2.0.0,<3.0)", "pydocstyle (>=1.0.0)", "pytest (>=2.8.0)", "pytest-cache (>=1.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "requests-mock (>=1.4.0,<2.0)"]
mysql = ["invenio-db[versioning,mysql] (==1.0.4)"]

[package.source]
type = "git"
url = "https://github.com/inspirehep/inspire-crawler.git"
reference = "11d56ea6ed70defe0800952b64c57f0b6e44b961"
resolved_reference = "11d56ea6ed70defe0800952b64c57f0b6e44b961"

[[package]]
name = "inspire-dojson"
version = "63.1.5"
description = "INSPIRE-specific rules to transform from MARCXML to JSON and back."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
langdetect = ">=1.0.7,<2.0"
inspire-utils = ">=3.0.0,<4.0"
Flask = ">=0.12.3,<2.0.0"
dojson = ">=1.3.1,<2.0"
inspire-schemas = ">=61.4,<62.0"
pycountry = ">=17.5.4,<18.0"
IDUtils = ">=1.0.1,<2.0"
isbnid-fork = ">=0.5.2,<1.0"

[package.extras]
all = ["flake8-future-import (>=0.4.3,<1.0)", "mock (>=2.0.0,<3.0)", "pytest (>=4.6,<5.0)", "pytest-cov (>=2.6.1,<3.0)", "unicode-string-literal (>=1.1,<2.0)"]
tests = ["flake8-future-import (>=0.4.3,<1.0)", "mock (>=2.0.0,<3.0)", "pytest (>=4.6,<5.0)", "pytest-cov (>=2.6.1,<3.0)", "unicode-string-literal (>=1.1,<2.0)"]

[[package]]
name = "inspire-idutils"
version = "1.2.4"
description = "\"Small library for persistent identifiers used in scholarly communication.\""
category = "main"
optional = false
python-versions = ">=2.7"

[package.dependencies]
isbnlib = ">=3.10.8"
six = ">=1.10"

[package.extras]
tests = ["pytest-black-ng (>=0.4.0)", "pytest-cache (>=1.0)", "pytest-runner (>=2.6.2)", "pytest-invenio (>=1.4.0)", "sphinx (>=4.5)"]

[[package]]
name = "inspire-json-merger"
version = "11.0.34"
description = "INSPIRE-specific configuration of the JSON Merger."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
munkres = "1.0.12"
pyrsistent = ">=0.14.0,<1.0"
inspire-utils = ">=3.0.0,<4.0"
json-merger = {version = "0.7.11", extras = ["contrib"]}
inspire-schemas = ">=61.0,<62.0"

[package.extras]
all = ["decorator (>=4.1.2,<5.0)", "flake8-future-import (>=0.4.3,<1.0)", "mock (>=2.0.0,<3.0)", "pytest-cov (>=2.6.1,<3.0)", "pytest (>=3.6.0,<4.0)"]
tests = ["decorator (>=4.1.2,<5.0)", "flake8-future-import (>=0.4.3,<1.0)", "mock (>=2.0.0,<3.0)", "pytest-cov (>=2.6.1,<3.0)", "pytest (>=3.6.0,<4.0)"]

[[package]]
name = "inspire-matcher"
version = "9.0.17"
description = "Find the records in INSPIRE most similar to a given record or reference."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
inspire-utils = ">=3.0.0,<4.0"
Flask = ">=0.12.2,<=2.0"
six = ">=1.11.0,<2.0"
MarkupSafe = "<2.0"
invenio-search = ">=1.0.0a10"
jinja2 = "<3.0"
Werkzeug = ">=0.12.2,<1.0"
inspire-json-merger = ">=11.0.0,<12.0"
dictdiffer = "<0.9"

[package.extras]
elasticsearch5 = ["elasticsearch-dsl (>=5.0,<6.0)", "elasticsearch (>=5.0,<6.0)"]
all = ["flake8-future-import (>=0.4.3,<1.0)", "mock (>=2.0.0,<3.0)", "pytest-cov (>=2.0,<2.6.0)", "pytest (>=3.6.0,<4.0)", "unicode-string-literal (>=1.1,<2.0)"]
elasticsearch7 = ["elasticsearch-dsl (>=7.0,<8.0)", "elasticsearch (>=7.0,<8.0)"]
tests = ["flake8-future-import (>=0.4.3,<1.0)", "mock (>=2.0.0,<3.0)", "pytest-cov (>=2.0,<2.6.0)", "pytest (>=3.6.0,<4.0)", "unicode-string-literal (>=1.1,<2.0)"]
elasticsearch2 = ["elasticsearch-dsl (>=2.2.0,<3.0)", "elasticsearch (>=2.4.1,<3.0)"]

[[package]]
name = "inspire-query-parser"
version = "6.0.37"
description = "A PEG-based query parser for INSPIRE."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
python-dateutil = ">=2.6.1,<3.0"
six = ">=1.11.0,<2.0"
inspire-utils = ">=3.0.0,<4.0"
pypeg2 = ">=2.15.2,<3.0"
inspire-schemas = ">=61.0,<62.0"

[package.extras]
all = ["flake8 (>=3.5.0,<4.0)", "mock (>=2.0.0,<3.0)", "pytest-cov (>=2.0,<=2.6.0)", "pytest (>=3.2.2,<4.0)"]
tests = ["flake8 (>=3.5.0,<4.0)", "mock (>=2.0.0,<3.0)", "pytest-cov (>=2.0,<=2.6.0)", "pytest (>=3.2.2,<4.0)"]

[[package]]
name = "inspire-schemas"
version = "61.5.29"
description = "Inspire JSON schemas and utilities to use them."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Unidecode = ">=1.0.22,<2.0"
pyyaml = "5.3.0"
inspire-utils = ">=3.0.0,<4.0"
inspire-idutils = {version = "1.2.4", markers = "python_version == \"2.7\""}
bump2version = {version = ">=0.0,<1", markers = "python_version == \"2.7\""}
rfc3987 = "*"
urllib3 = ">=1.21.1,<1.25.0 || >1.25.0,<1.25.1 || >1.25.1,<1.26"
pytz = "*"
isodate = "*"
jsonschema = ">=2.6.0,<3.0"
bleach = ">=3.2.1,<4.0"
isbnid = "*"
six = "*"

[package.extras]
docs = ["jsonschema2rst (>=0.1)", "sphinx"]
tests = ["check-manifest", "coverage", "isort (>=4.3.0,<5.0)", "pytest-cache", "pytest-cov (==2.6.1)", "pytest (>=3.6.0,<4.0)", "pytest-pep8", "mock", "isbnid", "inspire-idutils (==1.2.4)", "idutils (>=1.2.1,<2.0)", "unicode-string-literal (>=1.1,<2.0)"]

[[package]]
name = "inspire-service-orcid"
version = "9.0.0"
description = "ORCID service client"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
orcid = ">=1.0.3,<2"
timeexecution = ">=3.3.0,<4"
pkgsettings = ">=0.12.0,<1.0.0"

[[package]]
name = "inspire-utils"
version = "3.0.32"
description = "INSPIRE-specific utils."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Unidecode = ">=1.0.22,<2.0"
lxml = ">=4.4.0,<5.0"
babel = ">=2.5.1,<3.0"
six = ">=1.10.0,<2.0"
urllib3 = ">=1.0,<=1.26.12"
nameparser = ">=0.5.3,<1.0"
elasticsearch = "7.1.0"
elasticsearch-dsl = ">=7.1,<8.0"
python-dateutil = ">=2.6.1,<3.0"

[package.extras]
all = ["flake8-future-import (>=0.4.3,<1.0)", "mock (>=2.0.0,<3.0)", "pytest-cov (>=2.5.1,<3.0)", "pytest (>=4.6.0,<5.0)", "unicode-string-literal (>=1.1,<2.0)"]
tests = ["flake8-future-import (>=0.4.3,<1.0)", "mock (>=2.0.0,<3.0)", "pytest-cov (>=2.5.1,<3.0)", "pytest (>=4.6.0,<5.0)", "unicode-string-literal (>=1.1,<2.0)"]

[[package]]
name = "intervals"
version = "0.8.1"
description = "Python tools for handling intervals (ranges of comparable objects)."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
infinity = ">=0.1.3"

[package.extras]
test = ["pytest (>=2.2.3)", "Pygments (>=1.2)", "flake8 (>=2.4.0)", "isort (>=4.2.2)"]

[[package]]
name = "invenio-access"
version = "1.3.0"
description = "Invenio module for common role based access control."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Flask = ">=0.11.1"
invenio-accounts = ">=1.0.2"
six = ">=1.10"
Flask-BabelEx = ">=0.9.3"

[package.extras]
all = ["Sphinx (>=1.8.4)", "SQLAlchemy-Continuum (>=1.2.1)", "Werkzeug (>=0.11.2)", "check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.3.0)", "mock (>=1.0.0)", "pydocstyle (>=1.0.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=3.6.0)", "redis (>=2.10.3)"]
postgresql = ["invenio-db[postgresql] (>=1.0.0)"]
docs = ["Sphinx (>=1.8.4)"]
sqlite = ["invenio-db (>=1.0.0)"]
tests = ["SQLAlchemy-Continuum (>=1.2.1)", "Werkzeug (>=0.11.2)", "check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.3.0)", "mock (>=1.0.0)", "pydocstyle (>=1.0.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=3.6.0)", "redis (>=2.10.3)"]
mysql = ["invenio-db[mysql] (>=1.0.0)"]

[[package]]
name = "invenio-accounts"
version = "1.1.1"
description = "Invenio user management and authentication."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Flask = ">=0.11.1"
ipaddr = {version = ">=2.1.11", markers = "python_version == \"2.7\""}
Flask-Admin = ">=1.3.0"
ua-parser = ">=0.7.3"
maxminddb-geolite2 = ">=2017.404"
Flask-CeleryExt = ">=0.3.1"
SQLAlchemy-Utils = ">=0.31.0"
Flask-WTF = ">=0.13.1"
passlib = ">=1.7.1"
redis = ">=2.10.5"
Flask-KVSession = ">=0.6.1"
pyjwt = ">=1.5.0"
Flask-Mail = ">=0.9.1"
cryptography = ">=2.1.4"
Flask-Menu = ">=0.4.0"
Flask-BabelEx = ">=0.9.3"
Flask-Breadcrumbs = ">=0.3.0"
Flask-Security = ">=3.0.0"
Flask-Login = ">=0.3.0"
invenio-i18n = ">=1.0.0"
future = ">=0.16.0"
simplekv = ">=0.11.2"

[package.extras]
all = ["Sphinx (>=1.4.2,<1.6)", "celery (>=3.1.0,<4.0)", "check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.3.0)", "mock (>=2.0.0)", "pydocstyle (>=1.0.0)", "pytest-cov (>=1.8.0)", "pytest-flask (>=0.10.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)", "selenium (>=3.0.1)"]
postgresql = ["invenio-db[postgresql,versioning] (>=1.0.0)"]
docs = ["Sphinx (>=1.4.2,<1.6)"]
sqlite = ["invenio-db[versioning] (>=1.0.0)"]
celery = ["celery (>=3.1.0,<4.0)"]
tests = ["check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.3.0)", "mock (>=2.0.0)", "pydocstyle (>=1.0.0)", "pytest-cov (>=1.8.0)", "pytest-flask (>=0.10.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)", "selenium (>=3.0.1)"]
mysql = ["invenio-db[versioning,mysql] (>=1.0.0)"]

[[package]]
name = "invenio-admin"
version = "1.1.2"
description = "Invenio module that adds administration panel to the system."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Flask-Login = ">=0.3.0"
invenio-db = ">=1.0.0"
Flask = ">=0.11.1"
Flask-Menu = ">=0.5.0"
Flask-Admin = ">=1.5.3"
Flask-Principal = ">=0.4.0"

[package.extras]
access = ["invenio-access (>=1.0.0)"]
docs = ["Sphinx (>=1.4.2)"]
all = ["invenio-access (>=1.0.0)", "Sphinx (>=1.4.2)", "check-manifest (>=0.25)", "coverage (>=4.0)", "invenio-accounts (>=1.0.0)", "invenio-theme (>=1.1.1)", "isort (>=4.2.2)", "mock (>=1.3.0)", "pydocstyle (>=1.0.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)"]
tests = ["check-manifest (>=0.25)", "coverage (>=4.0)", "invenio-accounts (>=1.0.0)", "invenio-theme (>=1.1.1)", "isort (>=4.2.2)", "mock (>=1.3.0)", "pydocstyle (>=1.0.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)"]

[[package]]
name = "invenio-assets"
version = "1.1.3"
description = "Media assets management for Invenio."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Flask-Assets = ">=0.12"
Flask = ">=0.11.1"
Babel = ">=1.3"
speaklater = ">=1.3"
Flask-WebpackExt = ">=1.0.0"
webassets = ">=0.12"
node-semver = ">=0.1.1,<0.2.0"
Flask-Collect = "1.2.2"

[package.extras]
docs = ["Sphinx (>=1.5.1)"]
all = ["Sphinx (>=1.5.1)", "check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.2.2)", "mock (>=1.3.0)", "pydocstyle (>=1.0.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=4.0.0,<5.0.0)"]
tests = ["check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.2.2)", "mock (>=1.3.0)", "pydocstyle (>=1.0.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=4.0.0,<5.0.0)"]

[[package]]
name = "invenio-base"
version = "1.2.0"
description = "Base package for building Invenio application factories."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Flask = ">=0.11.1"
blinker = ">=1.4"
cookiecutter = ">=1.2.1"

[package.extras]
docs = ["Sphinx (>=1.4.2)"]
all = ["Sphinx (>=1.4.2)", "check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.2.2)", "mock (>=1.3.0)", "pydocstyle (>=2.0.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=3.8.0,<5.0.0)", "invenio-config (>=1.0.0)"]
tests = ["check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.2.2)", "mock (>=1.3.0)", "pydocstyle (>=2.0.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=3.8.0,<5.0.0)", "invenio-config (>=1.0.0)"]

[[package]]
name = "invenio-cache"
version = "1.0.0"
description = "Cache module for Invenio."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Flask = ">=0.11.1"
Flask-Caching = ">=1.3.2"

[package.extras]
docs = ["Sphinx (>=1.5.1)"]
all = ["Sphinx (>=1.5.1)", "Flask-Login (>=0.3.0)", "check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.2.2)", "mock (>=2.0.0)", "pydocstyle (>=1.0.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=3.2.0)", "python-memcached (>=1.58)", "redis (>=2.10.5)", "Sphinx (>=1.5.1)", "Flask-Login (>=0.3.0)", "check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.2.2)", "mock (>=2.0.0)", "pydocstyle (>=1.0.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=3.2.0)", "python-memcached (>=1.58)", "redis (>=2.10.5)"]
tests = ["check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.2.2)", "mock (>=2.0.0)", "pydocstyle (>=1.0.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=3.2.0)", "python-memcached (>=1.58)", "redis (>=2.10.5)"]
login = ["Flask-Login (>=0.3.0)"]

[[package]]
name = "invenio-celery"
version = "1.1.0"
description = "Celery module for Invenio."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Flask = ">=0.11"
msgpack = ">=0.5.2"
redis = ">=2.10.0"
Flask-CeleryExt = ">=0.3.0"

[package.extras]
docs = ["Sphinx (>=1.4.2)"]
all = ["Sphinx (>=1.4.2)", "check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.2.2)", "mock (>=1.3.0)", "pydocstyle (>=1.0.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)", "Sphinx (>=1.4.2)", "check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.2.2)", "mock (>=1.3.0)", "pydocstyle (>=1.0.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)"]
tests = ["check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.2.2)", "mock (>=1.3.0)", "pydocstyle (>=1.0.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)"]

[[package]]
name = "invenio-classifier"
version = "1.3.2"
description = "Invenio module for record classification."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Flask = ">=0.11.1"
requests = ">=2.9.1"
rdflib = ">=4.2.1"
six = ">=1.10.0"

[package.extras]
docs = ["Sphinx (>=1.4.2)"]
all = ["Sphinx (>=1.4.2)", "check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.2.2)", "pydocstyle (>=1.0.0)", "pytest-cache (>=1.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)", "Sphinx (>=1.4.2)", "check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.2.2)", "pydocstyle (>=1.0.0)", "pytest-cache (>=1.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)"]
tests = ["check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.2.2)", "pydocstyle (>=1.0.0)", "pytest-cache (>=1.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)"]

[[package]]
name = "invenio-config"
version = "1.0.2"
description = "Invenio configuration loader."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Flask = ">=0.11.1"

[package.extras]
docs = ["Sphinx (>=1.8.0)"]
all = ["Sphinx (>=1.8.0)", "check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.2.2)", "mock (>=2.0.0)", "pydocstyle (>=1.0.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=4.0.0,<5.0.0)"]
tests = ["check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.2.2)", "mock (>=2.0.0)", "pydocstyle (>=1.0.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=4.0.0,<5.0.0)"]

[[package]]
name = "invenio-db"
version = "1.0.4"
description = "Database management for Invenio."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Flask-Alembic = ">=2.0.1"
SQLAlchemy = ">=1.0"
SQLAlchemy-Utils = ">=0.33.1"
psycopg2-binary = {version = ">=2.7.4", optional = true, markers = "extra == \"postgresql\""}
Flask = ">=0.11.1"
Flask-SQLAlchemy = ">=2.1"
SQLAlchemy-Continuum = {version = ">=1.3.6", optional = true, markers = "extra == \"versioning\""}

[package.extras]
all = ["check-manifest (>=0.25)", "coverage (>=4.0)", "cryptography (>=2.1.4)", "isort (>=4.2.2)", "mock (>=1.3.0)", "pydocstyle (>=1.0.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=3.8.0,<5.0.0)", "psycopg2-binary (>=2.7.4)", "Sphinx (>=1.8.0)", "pymysql (>=0.6.7)", "SQLAlchemy-Continuum (>=1.3.6)"]
postgresql = ["psycopg2-binary (>=2.7.4)"]
docs = ["Sphinx (>=1.8.0)"]
tests = ["check-manifest (>=0.25)", "coverage (>=4.0)", "cryptography (>=2.1.4)", "isort (>=4.2.2)", "mock (>=1.3.0)", "pydocstyle (>=1.0.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=3.8.0,<5.0.0)"]
mysql = ["pymysql (>=0.6.7)"]
versioning = ["SQLAlchemy-Continuum (>=1.3.6)"]

[[package]]
name = "invenio-files-rest"
version = "1.0.5"
description = "Files download/upload REST API similar to S3 for Invenio."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Flask-Login = ">=0.3.2"
fs = ">=0.5.4,<2.0"
SQLAlchemy-Utils = ">=0.31.0"
simplejson = ">=3.0.0"
Flask = ">=0.11.1"
Flask-WTF = ">=0.13.1"
WTForms = ">=2.0"
Flask-CeleryExt = ">=0.3.1"
invenio-rest = {version = ">=1.1.2", extras = ["cors"]}

[package.extras]
all = ["Sphinx (>=1.5.1)", "sphinxcontrib-httpdomain (>=1.4.0)", "Flask-BabelEx (>=0.9.3)", "Flask-Menu (>=0.5.0)", "SQLAlchemy-Continuum (>=1.2.1)", "check-manifest (>=0.25)", "coverage (>=4.0)", "invenio-access (>=1.0.0)", "invenio-accounts (>=1.0.0)", "invenio-admin (>=1.0.0)", "invenio-celery (>=1.0.0)", "isort (>=4.3.4)", "mock (>=1.3.0)", "pydocstyle (>=1.0.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=4.0.0,<5.0.0)"]
postgresql = ["invenio-db[postgresql] (>=1.0.0)"]
docs = ["Sphinx (>=1.5.1)", "sphinxcontrib-httpdomain (>=1.4.0)"]
sqlite = ["invenio-db (>=1.0.0)"]
tests = ["Flask-BabelEx (>=0.9.3)", "Flask-Menu (>=0.5.0)", "SQLAlchemy-Continuum (>=1.2.1)", "check-manifest (>=0.25)", "coverage (>=4.0)", "invenio-access (>=1.0.0)", "invenio-accounts (>=1.0.0)", "invenio-admin (>=1.0.0)", "invenio-celery (>=1.0.0)", "isort (>=4.3.4)", "mock (>=1.3.0)", "pydocstyle (>=1.0.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=4.0.0,<5.0.0)"]
mysql = ["invenio-db[mysql] (>=1.0.0)"]

[[package]]
name = "invenio-i18n"
version = "1.1.1"
description = "Invenio internationalization module."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Flask = ">=0.11.1"
flask-webpackext = ">=1.0.0"
Flask-BabelEx = ">=0.9.2"

[package.extras]
docs = ["Sphinx (>=1.5.1)"]
all = ["Sphinx (>=1.5.1)", "Flask-Login (>=0.3.0)", "check-manifest (>=0.25)", "coverage (>=4.0)", "invenio-assets (>=1.0.0)", "isort (>=4.3.0)", "pydocstyle (>=1.0.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)"]
tests = ["Flask-Login (>=0.3.0)", "check-manifest (>=0.25)", "coverage (>=4.0)", "invenio-assets (>=1.0.0)", "isort (>=4.3.0)", "pydocstyle (>=1.0.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)"]

[[package]]
name = "invenio-indexer"
version = "1.1.1"
description = "Record indexer for Invenio."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Flask = ">=0.11.1"
invenio-records = ">=1.0.0"
invenio-pidstore = ">=1.0.0"
pytz = ">=2016.4"
Flask-CeleryExt = ">=0.3.0"

[package.extras]
all = ["attrs (>=17.4.0)", "check-manifest (>=0.25)", "coverage (>=4.0)", "invenio-db[versioning] (>=1.0.0)", "isort (>=4.3.21)", "mock (>=1.3.0)", "pydocstyle (>=1.0.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)", "redis (>=2.10.0)", "attrs (>=17.4.0)", "check-manifest (>=0.25)", "coverage (>=4.0)", "invenio-db[versioning] (>=1.0.0)", "isort (>=4.3.21)", "mock (>=1.3.0)", "pydocstyle (>=1.0.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)", "redis (>=2.10.0)", "celery (>=3.1.16)", "Sphinx (>=1.5.1,<1.6)"]
docs = ["Sphinx (>=1.5.1,<1.6)", "celery (>=3.1.16)"]
tests = ["attrs (>=17.4.0)", "check-manifest (>=0.25)", "coverage (>=4.0)", "invenio-db[versioning] (>=1.0.0)", "isort (>=4.3.21)", "mock (>=1.3.0)", "pydocstyle (>=1.0.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)", "redis (>=2.10.0)"]
elasticsearch5 = ["invenio-search[elasticsearch5] (>=1.2.0)"]
elasticsearch7 = ["invenio-search[elasticsearch7] (>=1.2.0)"]
elasticsearch6 = ["invenio-search[elasticsearch6] (>=1.2.0)"]
elasticsearch2 = ["invenio-search[elasticsearch2] (>=1.2.0)"]

[[package]]
name = "invenio-jsonschemas"
version = "1.0.1"
description = "Invenio module for building and serving JSONSchemas."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Flask = ">=0.11.1"
jsonref = ">=0.1"
functools32 = {version = ">=3.2.3.post2", markers = "python_version == \"2.7\""}

[package.extras]
docs = ["Sphinx (>=1.6.2)"]
all = ["Sphinx (>=1.6.2)", "check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.2.2)", "jsonresolver[jsonschema] (>=0.2.1)", "pydocstyle (>=2.0.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=4.0.0,<5.0.0)", "mock (>=1.3.0)"]
tests = ["check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.2.2)", "jsonresolver[jsonschema] (>=0.2.1)", "pydocstyle (>=2.0.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=4.0.0,<5.0.0)", "mock (>=1.3.0)"]

[[package]]
name = "invenio-mail"
version = "1.0.2"
description = "Invenio-Mail is an integration layer between Invenio and Flask-Mail."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Flask = ">=0.11.1"
Flask-Mail = ">=0.9.1"

[package.extras]
celery = ["Flask-CeleryExt (>=0.2.2)"]
docs = ["Flask-CeleryExt (>=0.2.2)", "Sphinx (>=1.4.2)"]
all = ["Flask-CeleryExt (>=0.2.2)", "Sphinx (>=1.4.2)", "check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.2.2)", "pydocstyle (>=1.0.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)"]
tests = ["check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.2.2)", "pydocstyle (>=1.0.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)"]

[[package]]
name = "invenio-oaiharvester"
version = "1.0.0a4"
description = "Invenio module for OAI-PMH metadata harvesting between repositories."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Flask = ">=0.12"
blinker = ">=1.4"
sickle = ">=0.5"
flask-celeryext = ">=0.2.2"

[package.extras]
all = ["Sphinx (>=1.5.3,<1.6)", "celery (>=3.1.25,<4.0)", "check-manifest (>=0.35)", "coverage (>=4.3.4)", "isort (==4.2.2)", "mock (>=2.0.0)", "pydocstyle (>=1.1.1)", "pytest (>=2.8.0)", "pytest-cache (>=1.0)", "pytest-cov (>=2.4.0)", "pytest-pep8 (>=1.0.6)", "responses (>=0.5.1)"]
postgresql = ["invenio-db[postgresql] (>=1.0.0a9)"]
docs = ["Sphinx (>=1.5.3,<1.6)"]
sqlite = ["invenio-db (>=1.0.0a9)"]
tests = ["celery (>=3.1.25,<4.0)", "check-manifest (>=0.35)", "coverage (>=4.3.4)", "isort (==4.2.2)", "mock (>=2.0.0)", "pydocstyle (>=1.1.1)", "pytest (>=2.8.0)", "pytest-cache (>=1.0)", "pytest-cov (>=2.4.0)", "pytest-pep8 (>=1.0.6)", "responses (>=0.5.1)"]
mysql = ["invenio-db[mysql] (>=1.0.0a9)"]

[[package]]
name = "invenio-oauth2server"
version = "1.0.4"
description = "Invenio module that implements OAuth 2 server."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Flask-Login = ">=0.3.0"
oauthlib = ">=1.1.2,<3.0.0"
SQLAlchemy-Utils = {version = ">=0.33.0", extras = ["encrypted"]}
Flask = ">=0.11.1"
six = ">=1.10.0"
Flask-OAuthlib = ">=0.9.5"
werkzeug = ">=0.14.1"
invenio-accounts = ">=1.0.0"
future = ">=0.16.0"
Flask-BabelEx = ">=0.9.2"
requests-oauthlib = ">=1.1.0,<1.2.0"
WTForms-Alchemy = ">=0.15.0"
Flask-Breadcrumbs = ">=0.4.0"
pyjwt = ">=1.5.0"
Flask-WTF = ">=0.13.1"

[package.extras]
all = ["invenio-admin (>=1.0.0)", "Sphinx (>=1.5.1)", "redis (>=2.10.5)", "SQLAlchemy-Continuum (>=1.2.1)", "check-manifest (>=0.25)", "coverage (>=4.0)", "invenio-assets (>=1.0.0)", "invenio-i18n (>=1.0.0)", "invenio-theme (>=1.0.0)", "isort (>=4.2.2)", "mock (>=1.3.0)", "pydocstyle (>=1.0.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=3.8.0,<5.0.0)"]
postgresql = ["invenio-db[postgresql] (>=1.0.0)"]
admin = ["invenio-admin (>=1.0.0)"]
docs = ["Sphinx (>=1.5.1)"]
redis = ["redis (>=2.10.5)"]
sqlite = ["invenio-db (>=1.0.0)"]
tests = ["SQLAlchemy-Continuum (>=1.2.1)", "check-manifest (>=0.25)", "coverage (>=4.0)", "invenio-assets (>=1.0.0)", "invenio-i18n (>=1.0.0)", "invenio-theme (>=1.0.0)", "isort (>=4.2.2)", "mock (>=1.3.0)", "pydocstyle (>=1.0.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=3.8.0,<5.0.0)"]
mysql = ["invenio-db[mysql] (>=1.0.0)"]

[[package]]
name = "invenio-oauthclient"
version = "1.1.3"
description = "Invenio module that provides OAuth web authorization support."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Flask-OAuthlib = ">=0.9.3"
blinker = ">=1.4"
sqlalchemy-utils = ">=0.32.0"
Flask = ">=0.11.1"
six = ">=1.9"
invenio-mail = ">=1.0.0"
oauthlib = ">=1.1.2,<3.0.0"
uritools = ">=1.0.1"
invenio-accounts = ">=1.0.0"
Flask-BabelEx = ">=0.9.3"
requests-oauthlib = ">=0.5.0,<1.2.0"
Flask-Breadcrumbs = ">=0.3.0"

[package.extras]
all = ["github3.py (>=1.0.0a4)", "uritemplate.py (>=0.2.0,<2.0)", "invenio-admin (>=1.0.0)", "Sphinx (>=1.5.1)", "SQLAlchemy-Continuum (>=1.2.1)", "check-manifest (>=0.25)", "coverage (>=4.0)", "httpretty (>=0.8.14)", "invenio-accounts (>=1.0.0)", "invenio-userprofiles (>=1.0.0)", "isort (>=4.2.2)", "mock (>=1.3.0)", "pydocstyle (>=1.0.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.3)", "simplejson (>=3.8)"]
github = ["github3.py (>=1.0.0a4)", "uritemplate.py (>=0.2.0,<2.0)"]
postgresql = ["invenio-db[postgresql] (>=1.0.0)"]
admin = ["invenio-admin (>=1.0.0)"]
docs = ["Sphinx (>=1.5.1)"]
sqlite = ["invenio-db (>=1.0.0)"]
tests = ["SQLAlchemy-Continuum (>=1.2.1)", "check-manifest (>=0.25)", "coverage (>=4.0)", "httpretty (>=0.8.14)", "invenio-accounts (>=1.0.0)", "invenio-userprofiles (>=1.0.0)", "isort (>=4.2.2)", "mock (>=1.3.0)", "pydocstyle (>=1.0.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.3)", "simplejson (>=3.8)"]
mysql = ["invenio-db[mysql] (>=1.0.0)"]

[[package]]
name = "invenio-pidstore"
version = "1.1.0"
description = "Invenio module that stores and registers persistent identifiers."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
base32-lib = ">=1.0.1"
enum34 = {version = ">=1.1.6", markers = "python_version < \"3.4\""}
six = ">=1.12.0"
Flask-BabelEx = ">=0.9.3"
Flask = ">=0.11.1"

[package.extras]
all = ["Sphinx (>=1.8.5)", "Flask-Admin (>=1.3.0)", "datacite (>=0.1.0)", "attrs (>=17.4.0)", "SQLAlchemy-Continuum (>=1.2.1)", "check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.3.0)", "invenio-admin (>=1.0.0)", "Flask-Menu (>=0.5.1)", "invenio-access (>=1.0.0)", "invenio-accounts (>=1.0.0)", "mock (>=3.0.0)", "pydocstyle (>=1.0.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=3.8.0,<5.0.0)"]
postgresql = ["invenio-db[postgresql] (>=1.0.0)"]
admin = ["Flask-Admin (>=1.3.0)"]
docs = ["Sphinx (>=1.8.5)"]
mysql = ["invenio-db[mysql] (>=1.0.0)"]
sqlite = ["invenio-db (>=1.0.0)"]
tests = ["attrs (>=17.4.0)", "SQLAlchemy-Continuum (>=1.2.1)", "check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.3.0)", "invenio-admin (>=1.0.0)", "Flask-Menu (>=0.5.1)", "invenio-access (>=1.0.0)", "invenio-accounts (>=1.0.0)", "mock (>=3.0.0)", "pydocstyle (>=1.0.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=3.8.0,<5.0.0)"]
datacite = ["datacite (>=0.1.0)"]

[[package]]
name = "invenio-records"
version = "1.1.1"
description = "Invenio-Records is a metadata storage module."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
blinker = ">=1.4"
Flask = ">=0.11.1"
jsonpatch = ">=1.11"
flask-celeryext = ">=0.2.2"
jsonresolver = ">=0.1.0"
jsonref = ">=0.1"
jsonschema = ">=2.5.1"

[package.extras]
all = ["Flask-Admin (>=1.3.0)", "Sphinx (>=1.5.1)", "check-manifest (>=0.25)", "coverage (>=4.5.3)", "Flask-Menu (>=0.4.0)", "invenio-admin (>=1.0.0)", "isort (>=4.3.0)", "mock (>=1.0.0)", "pydocstyle (>=3.0.0)", "pytest-cov (>=2.7.1)", "pytest-pep8 (>=1.0.6)", "pytest (>=4.6.4,<5.0.0)", "invenio-pidstore (>=1.0.0)"]
postgresql = ["invenio-db[postgresql,versioning] (>=1.0.0)"]
admin = ["Flask-Admin (>=1.3.0)"]
docs = ["Sphinx (>=1.5.1)"]
sqlite = ["invenio-db[versioning] (>=1.0.0)"]
tests = ["check-manifest (>=0.25)", "coverage (>=4.5.3)", "Flask-Menu (>=0.4.0)", "invenio-admin (>=1.0.0)", "isort (>=4.3.0)", "mock (>=1.0.0)", "pydocstyle (>=3.0.0)", "pytest-cov (>=2.7.1)", "pytest-pep8 (>=1.0.6)", "pytest (>=4.6.4,<5.0.0)"]
mysql = ["invenio-db[versioning,mysql] (>=1.0.0)"]
pidstore = ["invenio-pidstore (>=1.0.0)"]

[[package]]
name = "invenio-records-files"
version = "1.2.1"
description = "Invenio modules that integrates records and files."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Flask = ">=0.11.1"
invenio-records-rest = ">=1.6.3"
invenio-records = ">=1.0.0"
invenio-files-rest = ">=1.0.5"

[package.extras]
all = ["Sphinx (>=1.5.1)", "check-manifest (>=0.25)", "coverage (>=4.0)", "invenio-indexer (>=1.1.0)", "invenio-search[elasticsearch6] (>=1.2.0)", "isort (>=4.3.4)", "mock (>=1.3.0)", "pydocstyle (>=1.0.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=3.7.0)"]
postgresql = ["invenio-db[postgresql,versioning] (>=1.0.0)"]
docs = ["Sphinx (>=1.5.1)"]
sqlite = ["invenio-db[versioning] (>=1.0.0)"]
tests = ["check-manifest (>=0.25)", "coverage (>=4.0)", "invenio-indexer (>=1.1.0)", "invenio-search[elasticsearch6] (>=1.2.0)", "isort (>=4.3.4)", "mock (>=1.3.0)", "pydocstyle (>=1.0.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=3.7.0)"]
mysql = ["invenio-db[versioning,mysql] (>=1.0.0)"]

[[package]]
name = "invenio-records-rest"
version = "1.6.4"
description = "REST API for invenio-records."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
ftfy = ">=4.4.3,<5.0"
invenio-records = ">=1.0.0"
invenio-rest = ">=1.1.2"
Flask = ">=0.11.1"
six = ">=1.12"
Flask-BabelEx = ">=0.9.2"
attrs = ">=17.4.0"
arrow = ">=0.12.1"
bleach = ">=2.1.3"
python-dateutil = ">=2.4.2"
invenio-pidstore = ">=1.0.0"
invenio-indexer = ">=1.1.0"

[package.extras]
dublincore = ["dcxml (>=0.1.0)"]
all = ["datacite (>=1.0.1)", "Sphinx (>=1.6.7)", "dcxml (>=0.1.0)", "citeproc-py (>=0.3.0)", "citeproc-py-styles (>=0.1.0)", "check-manifest (>=0.25)", "coverage (>=4.0)", "Flask-Login (>=0.3.2)", "invenio-db[all] (>=1.0.2)", "invenio-indexer (>=1.0.0)", "isort (>=4.3.1)", "pydocstyle (>=1.0.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=4.0.0,<5.0.0)", "invenio-config (>=1.0.2)", "pyld (>=0.7.1)"]
jsonld = ["pyld (>=0.7.1)"]
docs = ["Sphinx (>=1.6.7)"]
tests = ["check-manifest (>=0.25)", "coverage (>=4.0)", "Flask-Login (>=0.3.2)", "invenio-db[all] (>=1.0.2)", "invenio-indexer (>=1.0.0)", "isort (>=4.3.1)", "pydocstyle (>=1.0.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=4.0.0,<5.0.0)", "invenio-config (>=1.0.2)"]
elasticsearch5 = ["invenio-search[elasticsearch5] (>=1.2.0)"]
elasticsearch7 = ["invenio-search[elasticsearch7] (>=1.2.0)"]
elasticsearch6 = ["invenio-search[elasticsearch6] (>=1.2.0)"]
elasticsearch2 = ["invenio-search[elasticsearch2] (>=1.2.0)"]
citeproc = ["citeproc-py (>=0.3.0)", "citeproc-py-styles (>=0.1.0)"]
datacite = ["datacite (>=1.0.1)"]

[[package]]
name = "invenio-records-ui"
version = "1.0.1"
description = "User interface for Invenio-Records."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Flask = ">=0.11.1"
invenio-records = ">=1.0.0"
invenio-pidstore = ">=1.0.0"
Flask-BabelEx = ">=0.9.3"

[package.extras]
docs = ["Sphinx (>=1.5.1)"]
all = ["Sphinx (>=1.5.1)", "check-manifest (>=0.25)", "coverage (>=4.0)", "invenio-access (>=1.0.0)", "invenio-accounts (>=1.0.0)", "invenio-db[postgresql,versioning,mysql] (>=1.0.0)", "isort (>=4.2.2)", "pydocstyle (>=1.0.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)", "Sphinx (>=1.5.1)", "check-manifest (>=0.25)", "coverage (>=4.0)", "invenio-access (>=1.0.0)", "invenio-accounts (>=1.0.0)", "invenio-db[postgresql,versioning,mysql] (>=1.0.0)", "isort (>=4.2.2)", "pydocstyle (>=1.0.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)"]
tests = ["check-manifest (>=0.25)", "coverage (>=4.0)", "invenio-access (>=1.0.0)", "invenio-accounts (>=1.0.0)", "invenio-db[postgresql,versioning,mysql] (>=1.0.0)", "isort (>=4.2.2)", "pydocstyle (>=1.0.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)"]

[[package]]
name = "invenio-rest"
version = "1.1.3"
description = "REST API module for Invenio."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Flask = ">=0.11.1"
webargs = ">=5.5.0,<6.0.0"
marshmallow = {version = ">=2.15.2,<3.0.0", markers = "python_version < \"3.0.0\""}
Flask-CORS = ">=2.1.0"

[package.extras]
docs = ["Sphinx (>=1.4.2)"]
all = ["check-manifest (>=0.25)", "coverage (>=4.0)", "xmltodict (>=0.11.0)", "isort (>=4.2.15)", "mock (>=1.3.0)", "pydocstyle (>=1.0.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)", "Sphinx (>=1.4.2)", "marshmallow (>=2.15.2)", "marshmallow (>=2.15.2,<3.0.0)"]
tests = ["check-manifest (>=0.25)", "coverage (>=4.0)", "xmltodict (>=0.11.0)", "isort (>=4.2.15)", "mock (>=1.3.0)", "pydocstyle (>=1.0.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)", "Sphinx (>=1.4.2)"]

[[package]]
name = "invenio-search"
version = "1.2.3"
description = "Invenio module for information retrieval."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Flask = ">=0.11.1"
elasticsearch = {version = ">=7.0.0,<8.0.0", optional = true, markers = "extra == \"elasticsearch7\""}
elasticsearch-dsl = {version = ">=7.0.0,<8.0.0", optional = true, markers = "extra == \"elasticsearch7\""}

[package.extras]
all = ["Sphinx (>=1.5.6,<1.6)", "invenio-accounts (>=1.0.0)", "check-manifest (>=0.35)", "coverage (>=4.0)", "invenio-db[versioning] (>=1.0.0)", "isort (>=4.2.15)", "mock (>=1.3.0)", "pydocstyle (>=1.0.0)", "pytest-cov (>=1.8.0)", "pytest-random-order (>=0.5.4)", "pytest-pep8 (>=1.0.6)", "pytest (>=3.8.1,<4)"]
docs = ["Sphinx (>=1.5.6,<1.6)", "invenio-accounts (>=1.0.0)"]
tests = ["check-manifest (>=0.35)", "coverage (>=4.0)", "invenio-db[versioning] (>=1.0.0)", "isort (>=4.2.15)", "mock (>=1.3.0)", "pydocstyle (>=1.0.0)", "pytest-cov (>=1.8.0)", "pytest-random-order (>=0.5.4)", "pytest-pep8 (>=1.0.6)", "pytest (>=3.8.1,<4)"]
elasticsearch5 = ["elasticsearch (>=5.0.0,<6.0.0)", "elasticsearch-dsl (>=5.1.0,<6.0.0)"]
elasticsearch7 = ["elasticsearch (>=7.0.0,<8.0.0)", "elasticsearch-dsl (>=7.0.0,<8.0.0)"]
elasticsearch6 = ["elasticsearch (>=6.0.0,<7.0.0)", "elasticsearch-dsl (>=6.0.0,<6.2.0)"]
elasticsearch2 = ["elasticsearch (>=2.0.0,<3.0.0)", "elasticsearch-dsl (>=2.0.0,<3.0.0)"]

[[package]]
name = "invenio-userprofiles"
version = "1.0.1"
description = "User profiles module for Invenio."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Flask-WTF = ">=0.13.1"
Flask-Mail = ">=0.9.1"
invenio-accounts = ">=1.0.0"
Flask = ">=0.11.1"
Flask-Menu = ">=0.4.0"
Flask-BabelEx = ">=0.9.3"
WTForms = ">=2.0.1"
Flask-Breadcrumbs = ">=0.3.0"

[package.extras]
all = ["invenio-admin (>=1.0.0)", "Sphinx (>=1.4.2)", "invenio-mail (>=1.0.0)", "SQLAlchemy-Continuum (>=1.2.1)", "check-manifest (>=0.25)", "coverage (>=4.0)", "invenio-i18n (>=1.0.0)", "isort (>=4.2.2)", "pydocstyle (>=1.0.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)"]
postgresql = ["invenio-db[postgresql] (>=1.0.0)"]
admin = ["invenio-admin (>=1.0.0)"]
docs = ["Sphinx (>=1.4.2)", "invenio-mail (>=1.0.0)"]
sqlite = ["invenio-db (>=1.0.0)"]
tests = ["SQLAlchemy-Continuum (>=1.2.1)", "check-manifest (>=0.25)", "coverage (>=4.0)", "invenio-i18n (>=1.0.0)", "isort (>=4.2.2)", "pydocstyle (>=1.0.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)"]
mysql = ["invenio-db[mysql] (>=1.0.0)"]

[[package]]
name = "invenio-workflows"
version = "7.0.6"
description = "Invenio module for running workflows."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
autosemver = ">=0.2,<1.0"
blinker = ">=1.4"
workflow = ">=2.0.1,<3.0"
invenio-files-rest = ">=1.0.0a3"
Flask-CLI = ">=0.2.1"
invenio-records-files = ">=1.0.0a5"
flask-celeryext = ">=0.1.0"

[package.extras]
all = ["Sphinx (>=1.5.1,<1.6)", "celery (>=4.3.0)", "check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.2.2)", "mock (>=1.0.0)", "pydocstyle (>=1.0.0)", "pytest-cache (>=1.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)", "invenio-db", "invenio-db", "invenio-db", "Sphinx (>=1.5.1,<1.6)", "celery (>=4.3.0)", "check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.2.2)", "mock (>=1.0.0)", "pydocstyle (>=1.0.0)", "pytest-cache (>=1.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)", "invenio-db", "invenio-db", "invenio-db"]
postgresql = ["invenio-db"]
docs = ["Sphinx (>=1.5.1,<1.6)"]
sqlite = ["invenio-db"]
tests = ["celery (>=4.3.0)", "check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.2.2)", "mock (>=1.0.0)", "pydocstyle (>=1.0.0)", "pytest-cache (>=1.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)"]
mysql = ["invenio-db"]

[[package]]
name = "invenio-workflows-files"
version = "1.0.3"
description = "Invenio module adding invenio-files-rest integration to invenio-workflows."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
autosemver = ">=0.2,<1.0"
invenio-files-rest = ">=1.0.0a3"
invenio-workflows = ">=7.0,<8.0"
pytest-runner = ">=2.6.2"
invenio-db = {version = ">=1.0.0a9", extras = ["versioning"]}
invenio-records-files = ">=1.0.0a5"

[package.extras]
docs = ["Sphinx (>=1.4.2)"]
all = ["Sphinx (>=1.4.2)", "check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.2.2)", "pydocstyle (>=1.0.0)", "pytest-cache (>=1.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)", "Sphinx (>=1.4.2)", "check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.2.2)", "pydocstyle (>=1.0.0)", "pytest-cache (>=1.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)"]
tests = ["check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.2.2)", "pydocstyle (>=1.0.0)", "pytest-cache (>=1.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)"]

[[package]]
name = "invenio-workflows-ui"
version = "2.0.19"
description = "Invenio module which acts as a UI layer for invenio-workflows."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
flask-login = "*"
autosemver = ">=0.2,<1.0"
invenio-access = ">=1.0.1,<2.0"
invenio-workflows = ">=7.0,<8.0"
elasticsearch-dsl = ">=5.0"
invenio-search = ">=1.0.0a5"
Flask-BabelEx = ">=0.9.2"
invenio-indexer = ">=1.0.0a5"
flask-principal = "*"
invenio-rest = "*"

[package.extras]
all = ["Sphinx (>=1.3)", "check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.2.2)", "pydocstyle (>=1.0.0)", "pytest-cache (>=1.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)", "invenio-search-ui (>=1.0.0a4)", "invenio-db[mysql] (>=1.0.0a9)"]
postgresql = ["invenio-db[postgresql] (>=1.0.0a9)"]
docs = ["Sphinx (>=1.3)"]
sqlite = ["invenio-db (>=1.0.0a9)"]
tests = ["check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.2.2)", "pydocstyle (>=1.0.0)", "pytest-cache (>=1.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)"]
mysql = ["invenio-db[mysql] (>=1.0.0a9)"]
ui = ["invenio-search-ui (>=1.0.0a4)"]

[[package]]
name = "invenio-xrootd"
version = "1.0.0a6"
description = "XRootD file storage support for Invenio."
category = "main"
optional = true
python-versions = "*"

[package.dependencies]
xrootdpyfs = ">=0.1.2"
invenio-files-rest = ">=1.0.0a8"

[package.extras]
docs = ["Sphinx (>=1.4.2)"]
all = ["Sphinx (>=1.4.2)", "blinker (>=1.4)", "coverage (>=4.0)", "isort (>=4.2.2)", "pydocstyle (>=1.0.0)", "pytest-cache (>=1.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)", "Sphinx (>=1.4.2)", "blinker (>=1.4)", "coverage (>=4.0)", "isort (>=4.2.2)", "pydocstyle (>=1.0.0)", "pytest-cache (>=1.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)"]
tests = ["blinker (>=1.4)", "coverage (>=4.0)", "isort (>=4.2.2)", "pydocstyle (>=1.0.0)", "pytest-cache (>=1.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)"]

[[package]]
name = "ipaddr"
version = "2.2.0"
description = "Google's IP address manipulation library"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "ipaddress"
version = "1.0.23"
description = "IPv4/IPv6 manipulation library"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "ipdb"
version = "0.12.3"
description = "IPython-enabled pdb"
category = "main"
optional = true
python-versions = ">=2.7"

[package.dependencies]
ipython = {version = ">=5.1.0,<6.0.0", markers = "python_version == \"2.7\""}

[[package]]
name = "ipython"
version = "5.9.0"
description = "IPython: Productive Interactive Computing"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
appnope = {version = "*", markers = "sys_platform == \"darwin\""}
win-unicode-console = {version = ">=0.5", markers = "sys_platform == \"win32\" and python_version < \"3.6\""}
pathlib2 = {version = "*", markers = "python_version == \"2.7\" or python_version == \"3.3\""}
"backports.shutil-get-terminal-size" = {version = "*", markers = "python_version == \"2.7\""}
traitlets = ">=4.2"
simplegeneric = ">0.8"
pygments = "*"
colorama = {version = "*", markers = "sys_platform == \"win32\""}
prompt-toolkit = ">=1.0.4,<2.0.0"
pexpect = {version = "*", markers = "sys_platform != \"win32\""}
pickleshare = "*"
decorator = "*"

[package.extras]
nbformat = ["nbformat"]
all = ["nbformat", "ipykernel", "pygments", "testpath", "notebook", "nbconvert", "ipyparallel", "qtconsole", "Sphinx (>=1.3)", "requests", "nose (>=0.10.1)", "ipywidgets"]
kernel = ["ipykernel"]
doc = ["Sphinx (>=1.3)"]
notebook = ["notebook", "ipywidgets"]
nbconvert = ["nbconvert"]
qtconsole = ["qtconsole"]
test = ["nose (>=0.10.1)", "requests", "testpath", "pygments", "nbformat", "ipykernel", "mock", "numpy"]
parallel = ["ipyparallel"]

[[package]]
name = "ipython-genutils"
version = "0.2.0"
description = "Vestigial utilities from IPython"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "isbnid"
version = "0.4.6"
description = "Python ISBN ids"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "isbnid-fork"
version = "0.5.2"
description = "Python ISBN ids"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
autosemver = ">=0.2,<1.0"

[package.extras]
tests = ["pytest-pep8 (>=1.0.6)", "pytest (>=3.0.4)"]

[[package]]
name = "isbnlib"
version = "3.10.14"
description = "Extract, clean, transform, hyphenate and metadata for ISBNs (International Standard Book Number)."
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "isodate"
version = "0.6.0"
description = "An ISO 8601 date/time/duration parser and formatter"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
six = "*"

[[package]]
name = "itsdangerous"
version = "1.1.0"
description = "Various helpers to pass data to untrusted environments and back."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "jinja2"
version = "2.11.1"
description = "A very fast and expressive template engine."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[package.dependencies]
MarkupSafe = ">=0.23"

[package.extras]
i18n = ["Babel (>=0.8)"]

[[package]]
name = "jinja2-time"
version = "0.2.0"
description = "Jinja2 Extension for Dates and Times"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
jinja2 = "*"
arrow = "*"

[[package]]
name = "jmespath"
version = "0.10.0"
description = "JSON Matching Expressions"
category = "main"
optional = false
python-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "json-merger"
version = "0.7.11"
description = "Python module that is able to merge json record objects."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Unidecode = {version = ">=0.4.19", optional = true, markers = "extra == \"contrib\""}
autosemver = "0.5.5"
munkres = {version = "<=1.0.12", optional = true, markers = "extra == \"contrib\""}
editdistance = {version = ">=0.3.1", optional = true, markers = "extra == \"contrib\""}
six = ">=1.10.0"
pyrsistent = ">=0.11.13"
dictdiffer = ">=0.6.0"

[package.extras]
contrib = ["editdistance (>=0.3.1)", "munkres (<=1.0.12)", "Unidecode (>=0.4.19)"]
docs = ["Sphinx (>=1.4.2)"]
all = ["editdistance (>=0.3.1)", "munkres (<=1.0.12)", "Unidecode (>=0.4.19)", "Sphinx (>=1.4.2)", "check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.2.2)", "pydocstyle (>=1.0.0)", "pytest-cache (>=1.0)", "pytest-cov (>=1.8.0)", "pytest (>=4.6.11)", "flake8 (>=3.9.0)"]
tests = ["check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.2.2)", "pydocstyle (>=1.0.0)", "pytest-cache (>=1.0)", "pytest-cov (>=1.8.0)", "pytest (>=4.6.11)", "flake8 (>=3.9.0)", "editdistance (>=0.3.1)", "munkres (<=1.0.12)", "Unidecode (>=0.4.19)"]

[[package]]
name = "jsonpatch"
version = "1.25"
description = " Apply JSON-Patches (RFC 6902) "
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[package.dependencies]
jsonpointer = ">=1.9"

[[package]]
name = "jsonpointer"
version = "2.0"
description = "Identify specific nodes in a JSON document (RFC 6901)"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "jsonref"
version = "0.2"
description = "An implementation of JSON Reference for Python"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "jsonresolver"
version = "0.2.1"
description = "JSON data resolver with support for plugins."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
six = ">=1.8.0"
werkzeug = ">=0.10.4"
pluggy = ">=0.3.0,<1.0"

[package.extras]
docs = ["Sphinx (>=1.3)"]
all = ["Sphinx (>=1.3)", "check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.2.2)", "mock (>=1.3.0)", "pydocstyle (>=1.0.0)", "pytest-cache (>=1.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)", "requests (>=2.7.0)", "jsonschema (>=2.5.1)", "jsonref (>=0.1)", "Sphinx (>=1.3)", "check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.2.2)", "mock (>=1.3.0)", "pydocstyle (>=1.0.0)", "pytest-cache (>=1.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)", "requests (>=2.7.0)", "jsonschema (>=2.5.1)", "jsonref (>=0.1)"]
tests = ["check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.2.2)", "mock (>=1.3.0)", "pydocstyle (>=1.0.0)", "pytest-cache (>=1.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)", "requests (>=2.7.0)"]
jsonref = ["jsonref (>=0.1)"]
jsonschema = ["jsonschema (>=2.5.1)"]

[[package]]
name = "jsonschema"
version = "2.6.0"
description = "An implementation of JSON Schema validation for Python"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
functools32 = {version = "*", markers = "python_version == \"2.7\""}

[package.extras]
format = ["rfc3987", "strict-rfc3339", "webcolors"]

[[package]]
name = "kombu"
version = "4.6.11"
description = "Messaging library for Python."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[package.dependencies]
importlib-metadata = {version = ">=0.18", markers = "python_version < \"3.8\""}
amqp = ">=2.6.0,<2.7"

[package.extras]
qpid = ["qpid-python (>=0.26)", "qpid-tools (>=0.26)"]
azurestoragequeues = ["azure-storage-queue"]
msgpack = ["msgpack"]
librabbitmq = ["librabbitmq (>=1.5.2)"]
mongodb = ["pymongo (>=3.3.0)"]
consul = ["python-consul (>=0.6.0)"]
azureservicebus = ["azure-servicebus (>=0.21.1)"]
redis = ["redis (>=3.3.11)"]
zookeeper = ["kazoo (>=1.3.1)"]
pyro = ["pyro4"]
yaml = ["PyYAML (>=3.10)"]
slmq = ["softlayer-messaging (>=1.0.3)"]
sqs = ["boto3 (>=1.4.4)", "pycurl (==7.43.0.2)"]
sqlalchemy = ["sqlalchemy"]

[[package]]
name = "langdetect"
version = "1.0.7"
description = "Language detection library ported from Google's language-detection."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
six = "*"

[[package]]
name = "latexcodec"
version = "2.0.1"
description = "A lexer and codec to work with LaTeX code in Python."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[package.dependencies]
six = ">=1.4.1"

[[package]]
name = "linkheader"
version = "0.4.3"
description = "Parse and format link headers according to RFC 5988 \"Web Linking\""
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "lxml"
version = "4.5.0"
description = "Powerful and Pythonic XML processing library combining libxml2/libxslt with the ElementTree API."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, != 3.4.*"

[package.extras]
source = ["Cython (>=0.29.7)"]
cssselect = ["cssselect (>=0.7)"]
html5 = ["html5lib"]
htmlsoup = ["beautifulsoup4"]

[[package]]
name = "mako"
version = "1.1.1"
description = "A super-fast templating language that borrows the  best ideas from the existing templating languages."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[package.dependencies]
MarkupSafe = ">=0.9.2"

[package.extras]
babel = ["babel"]
lingua = ["lingua"]

[[package]]
name = "markupsafe"
version = "1.1.1"
description = "Safely add untrusted strings to HTML/XML markup."
category = "main"
optional = false
python-versions = ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*"

[[package]]
name = "marshmallow"
version = "2.20.5"
description = "A lightweight library for converting complex datatypes to and from native Python datatypes."
category = "main"
optional = false
python-versions = "*"

[package.extras]
docs = ["sphinx (==2.1.2)", "sphinx-issues (==1.2.0)", "alabaster (==0.7.12)", "sphinx-version-warning (==1.1.2)"]
tests = ["pytest", "pytz"]
lint = ["flake8 (==3.7.4)"]
reco = ["python-dateutil", "simplejson"]
dev = ["python-dateutil", "simplejson", "pytest", "pytz", "flake8 (==3.7.4)", "tox"]

[[package]]
name = "maxminddb"
version = "1.5.2"
description = "Reader for the MaxMind DB format"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[package.dependencies]
ipaddress = "*"

[[package]]
name = "maxminddb-geolite2"
version = "2018.703"
description = "Provides access to the geolite2 database.  This product includes GeoLite2 data created by MaxMind, available from http://www.maxmind.com/"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
maxminddb = "*"

[[package]]
name = "mccabe"
version = "0.6.1"
description = "McCabe checker, plugin for flake8"
category = "main"
optional = true
python-versions = "*"

[[package]]
name = "mock"
version = "2.0.0"
description = "Rolling backport of unittest.mock for all Pythons"
category = "main"
optional = true
python-versions = "*"

[package.dependencies]
six = ">=1.9"
funcsigs = {version = ">=1", markers = "python_version < \"3.3\""}
pbr = ">=0.11"

[package.extras]
test = ["unittest2 (>=1.1.0)"]
docs = ["sphinx", "Pygments (<2)", "jinja2 (<2.7)", "sphinx (<1.3)"]

[[package]]
name = "more-itertools"
version = "5.0.0"
description = "More routines for operating on iterables, beyond itertools"
category = "main"
optional = true
python-versions = "*"

[package.dependencies]
six = ">=1.0.0,<2.0.0"

[[package]]
name = "msgpack"
version = "0.6.2"
description = "MessagePack (de)serializer."
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "munkres"
version = "1.0.12"
description = "munkres algorithm for the Assignment Problem"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "nameparser"
version = "0.5.8"
description = "A simple Python module for parsing human names into their individual components."
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "node-semver"
version = "0.1.1"
description = "port of node-semver"
category = "main"
optional = false
python-versions = "*"

[package.extras]
testing = ["pytest"]

[[package]]
name = "numpy"
version = "1.16.6"
description = "NumPy is the fundamental package for array computing with Python."
category = "main"
optional = false
python-versions = ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*"

[[package]]
name = "oauthlib"
version = "2.1.0"
description = "A generic, spec-compliant, thorough implementation of the OAuth request-signing logic"
category = "main"
optional = false
python-versions = "*"

[package.extras]
signals = ["blinker"]
test = ["nose", "unittest2", "cryptography", "mock", "pyjwt (>=1.0.0)", "blinker"]
signedtoken = ["cryptography", "pyjwt (>=1.0.0)"]
rsa = ["cryptography"]

[[package]]
name = "orcid"
version = "1.0.3"
description = "A python wrapper over the ORCID API"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
requests = "*"
beautifulsoup4 = "*"
lxml = "*"
html5lib = "*"
simplejson = "*"

[[package]]
name = "orderedmultidict"
version = "1.0.1"
description = "Ordered Multivalue Dictionary"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
six = ">=1.8.0"

[[package]]
name = "packaging"
version = "20.4"
description = "Core utilities for Python packages"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[package.dependencies]
pyparsing = ">=2.0.2"
six = "*"

[[package]]
name = "parsel"
version = "1.6.0"
description = "Parsel is a library to extract data from HTML and XML using XPath and CSS selectors"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
lxml = "*"
cssselect = ">=0.9"
six = ">=1.6.0"
w3lib = ">=1.19.0"
functools32 = {version = "*", markers = "python_version < \"3.0\""}

[[package]]
name = "passlib"
version = "1.7.2"
description = "comprehensive password hashing framework supporting over 30 schemes"
category = "main"
optional = false
python-versions = "*"

[package.extras]
argon2 = ["argon2-cffi (>=18.2.0)"]
bcrypt = ["bcrypt (>=3.1.0)"]
totp = ["cryptography"]
build_docs = ["sphinx (>=1.6)", "sphinxcontrib-fulltoc (>=1.2.0)", "cloud-sptheme (>=1.10.0)"]

[[package]]
name = "pathlib2"
version = "2.3.5"
description = "Object-oriented filesystem paths"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
six = "*"
scandir = {version = "*", markers = "python_version < \"3.5\""}

[[package]]
name = "pbr"
version = "5.4.4"
description = "Python Build Reasonableness"
category = "main"
optional = true
python-versions = "*"

[[package]]
name = "pexpect"
version = "4.8.0"
description = "Pexpect allows easy control of interactive console applications."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
ptyprocess = ">=0.5"

[[package]]
name = "pickleshare"
version = "0.7.5"
description = "Tiny 'shelve'-like database with concurrency support"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
pathlib2 = {version = "*", markers = "python_version in \"2.6 2.7 3.2 3.3\""}

[[package]]
name = "pkgsettings"
version = "0.12.0"
description = "Python package to ease the configuration of packages"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "plotextractor"
version = "0.3.15"
description = "Small library for extracting plots used in scholarly communication."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
python-magic = "*"
subprocess32 = ">=3.2.6"
six = [
    ">=1.7.2",
    "*",
]
Wand = ">=0.4.1,<=0.5.9"

[package.extras]
docs = ["Sphinx (>=1.3)", "sphinx-rtd-theme (>=0.1.7)"]
tests = ["coverage (>=4.0.0)", "pytest (>=2.8.0)", "pytest-cov (>=2.1.0)", "pycodestyle (>=2.8.0)"]

[[package]]
name = "pluggy"
version = "0.13.1"
description = "plugin and hook calling mechanisms for python"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[package.dependencies]
importlib-metadata = {version = ">=0.12", markers = "python_version < \"3.8\""}

[package.extras]
dev = ["pre-commit", "tox"]

[[package]]
name = "poyo"
version = "0.5.0"
description = "A lightweight YAML Parser for Python. 🐓"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "prompt-toolkit"
version = "1.0.18"
description = "Library for building powerful interactive command lines in Python"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
six = ">=1.9.0"
wcwidth = "*"

[[package]]
name = "psycopg2-binary"
version = "2.8.4"
description = "psycopg2 - Python-PostgreSQL Database Adapter"
category = "main"
optional = false
python-versions = ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*"

[[package]]
name = "ptyprocess"
version = "0.6.0"
description = "Run a subprocess in a pseudo terminal"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "py"
version = "1.8.1"
description = "library with cross-python path, ini-parsing, io, code, log facilities"
category = "main"
optional = true
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "pyasn1"
version = "0.4.8"
description = "ASN.1 types and codecs"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pyasn1-modules"
version = "0.2.8"
description = "A collection of ASN.1-based protocols modules."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
pyasn1 = ">=0.4.6,<0.5.0"

[[package]]
name = "pybtex"
version = "0.22.0"
description = "A BibTeX-compatible bibliography processor in Python"
category = "main"
optional = false
python-versions = ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*"

[package.dependencies]
latexcodec = ">=1.0.4"
PyYAML = ">=3.01"
six = "*"

[[package]]
name = "pycodestyle"
version = "2.5.0"
description = "Python style guide checker"
category = "main"
optional = true
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "pycountry"
version = "17.9.23"
description = "ISO country, subdivision, language, currency and script definitions and their translations"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pycparser"
version = "2.19"
description = "C parser in Python"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "pydispatcher"
version = "2.0.5"
description = "Multi-producer-multi-consumer signal dispatching mechanism"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pyflakes"
version = "2.1.1"
description = "passive checker of Python programs"
category = "main"
optional = true
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "pygments"
version = "2.5.2"
description = "Pygments is a syntax highlighting package written in Python."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[[package]]
name = "pyhamcrest"
version = "1.10.1"
description = "Hamcrest framework for matcher objects"
category = "main"
optional = false
python-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4"

[package.dependencies]
six = "*"

[[package]]
name = "pyjwt"
version = "1.7.1"
description = "JSON Web Token implementation in Python"
category = "main"
optional = false
python-versions = "*"

[package.extras]
test = ["pytest (>=4.0.1,<5.0.0)", "pytest-cov (>=2.6.0,<3.0.0)", "pytest-runner (>=4.2,<5.0.0)"]
crypto = ["cryptography (>=1.4)"]
flake8 = ["flake8", "flake8-import-order", "pep8-naming"]

[[package]]
name = "pylatexenc"
version = "2.10"
description = "Simple LaTeX parser providing latex-to-unicode and unicode-to-latex conversion"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pynpm"
version = "0.1.1"
description = "Python interface to your NPM and package.json."
category = "main"
optional = false
python-versions = "*"

[package.extras]
docs = ["Sphinx (>=1.5.1)"]
all = ["Sphinx (>=1.5.1)", "check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.2.2)", "pydocstyle (>=1.0.0)", "pytest-cache (>=1.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)", "Sphinx (>=1.5.1)", "check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.2.2)", "pydocstyle (>=1.0.0)", "pytest-cache (>=1.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)"]
tests = ["check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.2.2)", "pydocstyle (>=1.0.0)", "pytest-cache (>=1.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)"]

[[package]]
name = "pyopenssl"
version = "17.5.0"
description = "Python wrapper module around the OpenSSL library"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
six = ">=1.5.2"
cryptography = ">=2.1.4"

[package.extras]
test = ["flaky", "pretend", "pytest (>=3.0.1,<3.3.0)"]
docs = ["sphinx", "sphinx-rtd-theme"]

[[package]]
name = "pyparsing"
version = "2.4.6"
description = "Python parsing module"
category = "main"
optional = false
python-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "pypdf2"
version = "1.26.0"
description = "PDF toolkit"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pypeg2"
version = "2.15.2"
description = "An intrinsic PEG Parser-Interpreter for Python"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pypydispatcher"
version = "2.1.2"
description = "Multi-producer-multi-consumer signal dispatching mechanism"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pyrsistent"
version = "0.15.7"
description = "Persistent/Functional/Immutable data structures"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
six = "*"

[[package]]
name = "pytest"
version = "3.10.1"
description = "pytest: simple powerful testing with Python"
category = "main"
optional = true
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[package.dependencies]
more-itertools = ">=4.0.0"
six = ">=1.10.0"
funcsigs = {version = "*", markers = "python_version < \"3.0\""}
py = ">=1.5.0"
colorama = {version = "*", markers = "sys_platform == \"win32\""}
attrs = ">=17.4.0"
pathlib2 = {version = ">=2.2.0", markers = "python_version < \"3.6\""}
pluggy = ">=0.7"
atomicwrites = ">=1.0"

[[package]]
name = "pytest-cov"
version = "2.8.1"
description = "Pytest plugin for measuring coverage."
category = "main"
optional = true
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[package.dependencies]
pytest = ">=3.6"
coverage = ">=4.4"

[package.extras]
testing = ["fields", "hunter", "process-tests (==2.0.2)", "six", "virtualenv"]

[[package]]
name = "pytest-runner"
version = "5.2"
description = "Invoke py.test as distutils command with dependency resolution"
category = "main"
optional = false
python-versions = ">=2.7"

[package.extras]
docs = ["sphinx", "jaraco.packaging (>=3.2)", "rst.linker (>=1.9)"]
testing = ["pytest (>=3.5,!=3.7.3)", "pytest-checkdocs", "pytest-flake8", "pytest-black-multipy", "pytest-cov", "pytest-virtualenv"]

[[package]]
name = "pytest-vcr"
version = "0.3.0"
description = "Plugin for managing VCR.py cassettes"
category = "main"
optional = true
python-versions = "*"

[package.dependencies]
pytest = ">=3.0.0"
vcrpy = "*"

[[package]]
name = "python-dateutil"
version = "2.8.1"
description = "Extensions to the standard Python datetime module"
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,>=2.7"

[package.dependencies]
six = ">=1.5"

[[package]]
name = "python-editor"
version = "1.0.4"
description = "Programmatically open an editor, capture the result."
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "python-logstash"
version = "0.4.8"
description = "Python logging handler for Logstash."
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "python-magic"
version = "0.4.15"
description = "File type identification using libmagic"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "python-redis-lock"
version = "3.5.0"
description = "Lock context manager implemented via redis SETNX/BLPOP."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[package.dependencies]
redis = ">=2.10.0"

[package.extras]
django = ["django-redis (>=3.8.0)"]

[[package]]
name = "python-scrapyd-api"
version = "2.1.2"
description = "A Python wrapper for working with the Scrapyd API"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
requests = "*"

[[package]]
name = "pytz"
version = "2018.9"
description = "World timezone definitions, modern and historical"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pywebpack"
version = "1.0.1"
description = "Webpack integration layer for Python."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
pynpm = ">=0.1.0"
node-semver = ">=0.1.1"

[package.extras]
docs = ["Sphinx (>=1.5.1)"]
all = ["Sphinx (>=1.5.1)", "check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.3.21)", "pydocstyle (>=1.0.0)", "pytest-cache (>=1.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)"]
tests = ["check-manifest (>=0.25)", "coverage (>=4.0)", "isort (>=4.3.21)", "pydocstyle (>=1.0.0)", "pytest-cache (>=1.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)"]

[[package]]
name = "pyyaml"
version = "5.3"
description = "YAML parser and emitter for Python"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[[package]]
name = "queuelib"
version = "1.5.0"
description = "Collection of persistent (disk-based) queues"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "raven"
version = "6.10.0"
description = "Raven is a client for Sentry (https://getsentry.com)"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Flask = {version = ">=0.8", optional = true, markers = "extra == \"flask\""}
contextlib2 = {version = "*", markers = "python_version < \"3.2\""}
blinker = {version = ">=1.1", optional = true, markers = "extra == \"flask\""}

[package.extras]
flask = ["Flask (>=0.8)", "blinker (>=1.1)"]
tests = ["bottle", "celery (>=2.5)", "coverage (<4)", "exam (>=0.5.2)", "flake8 (==3.5.0)", "logbook", "mock", "nose", "pytz", "pytest (>=3.2.0,<3.3.0)", "pytest-timeout (==1.2.1)", "pytest-xdist (==1.18.2)", "pytest-pythonpath (==0.7.2)", "pytest-cov (==2.5.1)", "pytest-flake8 (==1.0.0)", "requests", "tornado (>=4.1,<5.0)", "tox", "webob", "webtest", "wheel", "anyjson", "zconfig", "Flask (>=0.8)", "blinker (>=1.1)", "Flask-Login (>=0.2.0)", "blinker (>=1.1)", "sanic (>=0.7.0)", "aiohttp"]

[[package]]
name = "rdflib"
version = "4.2.2"
description = "RDFLib is a Python library for working with RDF, a simple yet powerful language for representing information."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
pyparsing = "*"
isodate = "*"

[package.extras]
html = ["html5lib"]
sparql = ["sparqlwrapper"]

[[package]]
name = "redis"
version = "3.4.1"
description = "Python client for Redis key-value store"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[package.extras]
hiredis = ["hiredis (>=0.1.3)"]

[[package]]
name = "refextract"
version = "0.2.27"
description = "Small library for extracting references used in scholarly communication."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
unidecode = ">=1.0.22,<2.0"
autosemver = ">=0.5.3,<1.0"
six = ">=1.10.0,<2.0"
PyPDF2 = ">=1.26.0,<2.0"
inspire-utils = ">=3.0.0,<4.0"
python-magic = ">=0.4.15,<1.0"
requests = ">=2.18.4,<3.0"

[package.extras]
docs = ["Sphinx (>=1.7.1,<2.0)"]
all = ["Sphinx (>=1.7.1,<2.0)", "flake8-future-import (>=0.4.4,<1.0)", "flake8 (>=3.5.0,<4.0)", "pytest-cov (>=2.10,<3.0)", "pytest (>=4.6,<5.0)", "responses (>=0.8.1,<1.0)"]
tests = ["flake8-future-import (>=0.4.4,<1.0)", "flake8 (>=3.5.0,<4.0)", "pytest-cov (>=2.10,<3.0)", "pytest (>=4.6,<5.0)", "responses (>=0.8.1,<1.0)", "unicode-string-literal (>=1.1,<2.0)"]

[[package]]
name = "requests"
version = "2.22.0"
description = "Python HTTP for Humans."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[package.dependencies]
idna = ">=2.5,<2.9"
certifi = ">=2017.4.17"
chardet = ">=3.0.2,<3.1.0"
urllib3 = ">=1.21.1,<1.25.0 || >1.25.0,<1.25.1 || >1.25.1,<1.26"

[package.extras]
security = ["pyOpenSSL (>=0.14)", "cryptography (>=1.3.4)", "idna (>=2.0.0)"]
socks = ["PySocks (>=1.5.6,!=1.5.7)", "win-inet-pton"]

[[package]]
name = "requests-mock"
version = "1.7.0"
description = "Mock out responses from the requests package"
category = "main"
optional = true
python-versions = "*"

[package.dependencies]
requests = ">=2.3,<3"
six = "*"

[package.extras]
test = ["fixtures", "mock", "purl", "pytest", "sphinx", "testrepository (>=0.0.18)", "testtools"]
fixture = ["fixtures"]

[[package]]
name = "requests-oauthlib"
version = "1.1.0"
description = "OAuthlib authentication support for Requests."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[package.dependencies]
oauthlib = ">=2.1.0,<3.0.0"
requests = ">=2.0.0"

[package.extras]
rsa = ["oauthlib[signedtoken] (>=2.1.0,<3.0.0)"]

[[package]]
name = "rfc3987"
version = "1.3.8"
description = "Parsing and validation of URIs (RFC 3986) and IRIs (RFC 3987)"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "rt"
version = "1.0.13"
description = "Python interface to Request Tracker API"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
requests = "*"
six = "*"

[[package]]
name = "s3transfer"
version = "0.3.3"
description = "An Amazon S3 Transfer Manager"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
botocore = ">=1.12.36,<2.0a.0"
futures = {version = ">=2.2.0,<4.0.0", markers = "python_version == \"2.7\""}

[[package]]
name = "scandir"
version = "1.10.0"
description = "scandir, a better directory iterator and faster os.walk()"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "scrapy"
version = "1.6.0"
description = "A high-level Web Crawling and Web Scraping framework"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[package.dependencies]
PyPyDispatcher = {version = ">=2.1.0", markers = "platform_python_implementation == \"PyPy\""}
lxml = "*"
pyOpenSSL = "*"
six = ">=1.5.2"
Twisted = ">=13.1.0"
w3lib = ">=1.17.0"
service-identity = "*"
PyDispatcher = ">=2.0.5"
cssselect = ">=0.9"
parsel = ">=1.5"
queuelib = "*"

[[package]]
name = "scrapy-crawl-once"
version = "0.1.1"
description = "Scrapy middleware which allows to crawl only new content"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
six = "*"
sqlitedict = ">=1.5"

[[package]]
name = "scrapy-sentry"
version = "0.9.0"
description = "Sentry component for Scrapy"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Scrapy = ">=1.4.0"
six = ">=1.11.0"
raven = ">=6.3.0"

[[package]]
name = "scrapyd"
version = "1.1.0"
description = "A service for running Scrapy spiders, with an HTTP API"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Scrapy = ">=0.17"
Twisted = ">=8.0"

[[package]]
name = "scrapyd-client"
version = "1.1.0"
description = "A client for scrapyd"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Scrapy = ">=0.17"
six = "*"

[[package]]
name = "sentry-sdk"
version = "1.3.0"
description = "Python client for Sentry (https://sentry.io)"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
certifi = "*"
urllib3 = ">=1.10.0"

[package.extras]
celery = ["celery (>=3)"]
sqlalchemy = ["sqlalchemy (>=1.2)"]
rq = ["rq (>=0.6)"]
aiohttp = ["aiohttp (>=3.5)"]
pyspark = ["pyspark (>=2.4.4)"]
flask = ["flask (>=0.11)", "blinker (>=1.1)"]
pure_eval = ["pure-eval", "executing", "asttokens"]
django = ["django (>=1.8)"]
chalice = ["chalice (>=1.16.0)"]
beam = ["apache-beam (>=2.12)"]
tornado = ["tornado (>=5)"]
bottle = ["bottle (>=0.12.13)"]
sanic = ["sanic (>=0.8)"]
falcon = ["falcon (>=1.4)"]
httpx = ["httpx (>=0.16.0)"]

[[package]]
name = "service-identity"
version = "18.1.0"
description = "Service identity verification for pyOpenSSL & cryptography."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
pyasn1-modules = "*"
pyasn1 = "*"
ipaddress = {version = "*", markers = "python_version < \"3.3\""}
attrs = ">=16.0.0"
cryptography = "*"

[package.extras]
docs = ["sphinx"]
tests = ["coverage (>=4.2.0)", "pytest"]
idna = ["idna"]
dev = ["coverage (>=4.2.0)", "pytest", "sphinx", "idna", "pyopenssl"]

[[package]]
name = "setproctitle"
version = "1.1.10"
description = "A Python module to customize the process title"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "sickle"
version = "0.6.5"
description = "A lightweight OAI client library for Python"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
requests = ">=1.1.0"
lxml = ">=3.2.3"

[[package]]
name = "simplegeneric"
version = "0.8.1"
description = "Simple generic functions (similar to Python's own len(), pickle.dump(), etc.)"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "simplejson"
version = "3.17.0"
description = "Simple, fast, extensible JSON encoder/decoder for Python"
category = "main"
optional = false
python-versions = ">=2.5, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "simplekv"
version = "0.14.0"
description = "A key-value storage for binary data, support many backends."
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "singledispatch"
version = "3.7.0"
description = "Backport functools.singledispatch from Python 3.4 to Python 2.6-3.3."
category = "main"
optional = true
python-versions = ">=2.6"

[package.dependencies]
six = "*"

[package.extras]
docs = ["sphinx", "jaraco.packaging (>=8.2)", "rst.linker (>=1.9)"]
testing = ["pytest (>=4.6)", "pytest-flake8", "pytest-cov", "pytest-black (>=0.3.7)", "unittest2", "pytest-checkdocs (>=2.4)"]

[[package]]
name = "six"
version = "1.14.0"
description = "Python 2 and 3 compatibility utilities"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "snowballstemmer"
version = "2.0.0"
description = "This package provides 26 stemmers for 25 languages generated from Snowball algorithms."
category = "main"
optional = true
python-versions = "*"

[[package]]
name = "soupsieve"
version = "1.9.5"
description = "A modern CSS selector implementation for Beautiful Soup."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
"backports.functools-lru-cache" = {version = "*", markers = "python_version < \"3\""}

[[package]]
name = "speaklater"
version = "1.3"
description = "implements a lazy string for python useful for use with gettext"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "sphinx"
version = "1.5.6"
description = "Python documentation generator"
category = "main"
optional = true
python-versions = "*"

[package.dependencies]
imagesize = "*"
snowballstemmer = ">=1.1"
babel = ">=1.3,<2.0 || >2.0"
alabaster = ">=0.7,<0.8"
six = ">=1.5"
docutils = ">=0.11"
Pygments = ">=2.0"
Jinja2 = ">=2.3"
colorama = {version = ">=0.3.5", markers = "sys_platform == \"win32\""}
requests = ">=2.0.0"

[package.extras]
test = ["html5lib", "mock", "pytest", "simplejson"]
websupport = ["sqlalchemy (>=0.9)", "whoosh (>=2.0)"]

[[package]]
name = "sqlalchemy"
version = "1.3.13"
description = "Database Abstraction Library"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[package.extras]
postgresql_pg8000 = ["pg8000"]
postgresql = ["psycopg2"]
postgresql_psycopg2cffi = ["psycopg2cffi"]
pymysql = ["pymysql"]
mssql_pymssql = ["pymssql"]
postgresql_psycopg2binary = ["psycopg2-binary"]
mysql = ["mysqlclient"]
oracle = ["cx-oracle"]
mssql = ["pyodbc"]
mssql_pyodbc = ["pyodbc"]

[[package]]
name = "sqlalchemy-continuum"
version = "1.3.9"
description = "Versioning and auditing extension for SQLAlchemy."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
SQLAlchemy = ">=1.0.8"
SQLAlchemy-Utils = ">=0.30.12"

[package.extras]
flask-login = ["Flask-Login (>=0.2.9)"]
flexmock = ["flexmock (>=0.9.7)"]
flask = ["Flask (>=0.9)"]
flask-sqlalchemy = ["Flask-SQLAlchemy (>=1.0)"]
test = ["pytest (>=2.3.5)", "flexmock (>=0.9.7)", "psycopg2 (>=2.4.6)", "PyMySQL (==0.6.1)", "six (>=1.4.0)", "Flask-Login (>=0.2.9)", "Flask-SQLAlchemy (>=1.0)", "Flask (>=0.9)", "flexmock (>=0.9.7)", "SQLAlchemy-i18n (>=0.8.4)", "anyjson (>=0.3.3)"]
i18n = ["SQLAlchemy-i18n (>=0.8.4)"]
anyjson = ["anyjson (>=0.3.3)"]

[[package]]
name = "sqlalchemy-utils"
version = "0.36.1"
description = "Various utility functions for SQLAlchemy."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
SQLAlchemy = ">=1.0"
six = "*"
cryptography = {version = ">=0.6", optional = true, markers = "extra == \"encrypted\""}

[package.extras]
test_all = ["anyjson (>=0.3.3)", "arrow (>=0.3.4)", "Babel (>=1.3)", "colour (>=0.0.4)", "cryptography (>=0.6)", "enum34", "intervals (>=0.7.1)", "ipaddr", "passlib (>=1.6,<2.0)", "phonenumbers (>=5.9.2)", "pytest (>=2.7.1)", "Pygments (>=1.2)", "Jinja2 (>=2.3)", "docutils (>=0.10)", "flexmock (>=0.9.7)", "mock (==2.0.0)", "psycopg2 (>=2.5.1)", "pg8000 (>=1.12.4)", "pytz (>=2014.2)", "python-dateutil (>=2.6)", "pymysql", "flake8 (>=2.4.0)", "isort (>=4.2.2)", "pyodbc", "python-dateutil", "furl (>=0.4.1)"]
anyjson = ["anyjson (>=0.3.3)"]
color = ["colour (>=0.0.4)"]
babel = ["Babel (>=1.3)"]
enum = ["enum34"]
phone = ["phonenumbers (>=5.9.2)"]
intervals = ["intervals (>=0.7.1)"]
url = ["furl (>=0.4.1)"]
arrow = ["arrow (>=0.3.4)"]
encrypted = ["cryptography (>=0.6)"]
test = ["pytest (>=2.7.1)", "Pygments (>=1.2)", "Jinja2 (>=2.3)", "docutils (>=0.10)", "flexmock (>=0.9.7)", "mock (==2.0.0)", "psycopg2 (>=2.5.1)", "pg8000 (>=1.12.4)", "pytz (>=2014.2)", "python-dateutil (>=2.6)", "pymysql", "flake8 (>=2.4.0)", "isort (>=4.2.2)", "pyodbc"]
timezone = ["python-dateutil"]
password = ["passlib (>=1.6,<2.0)"]
ipaddress = ["ipaddr"]

[[package]]
name = "sqlitedict"
version = "1.6.0"
description = "Persistent dict in Python, backed up by sqlite3 and pickle, multithread-safe."
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "structlog"
version = "20.1.0"
description = "Structured Logging for Python"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
six = "*"

[package.extras]
docs = ["sphinx", "twisted"]
tests = ["coverage", "freezegun (>=0.2.8)", "pretend", "pytest (>=3.3.0)", "simplejson", "python-rapidjson", "pytest-asyncio"]
azure-pipelines = ["coverage", "freezegun (>=0.2.8)", "pretend", "pytest (>=3.3.0)", "simplejson", "pytest-azurepipelines", "python-rapidjson", "pytest-asyncio"]
dev = ["coverage", "freezegun (>=0.2.8)", "pretend", "pytest (>=3.3.0)", "simplejson", "sphinx", "twisted", "pre-commit", "python-rapidjson", "pytest-asyncio"]

[[package]]
name = "subprocess32"
version = "3.5.4"
description = "A backport of the subprocess module from Python 3 for use on 2.x."
category = "main"
optional = false
python-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*, <4"

[[package]]
name = "superlance"
version = "1.0.0"
description = "superlance plugins for supervisord"
category = "main"
optional = true
python-versions = "*"

[package.dependencies]
supervisor = "*"

[[package]]
name = "supervisor"
version = "4.1.0"
description = "A system for controlling process state under UNIX"
category = "main"
optional = true
python-versions = "*"

[package.extras]
testing = ["mock", "pytest", "pytest-cov"]

[[package]]
name = "sword2"
version = "0.1"
description = "SWORD v2 python client"
category = "main"
optional = false
python-versions = "*"
develop = true

[package.dependencies]
httplib2 = "*"

[package.source]
type = "git"
url = "https://github.com/inspirehep/python-client-sword2.git"
reference = "master"

[[package]]
name = "timeexecution"
version = "3.4.0"
description = "Python project"
category = "main"
optional = false
python-versions = "*"
develop = true

[package.dependencies]
fqn-decorators = ">=1.0.0,<2.0.0"
six = ">=1.10.0,<2.0.0"
elasticsearch = ">=2.2.0"
pkgsettings = ">=0.9.2"
influxdb = ">=2.11"

[package.source]
type = "git"
url = "https://github.com/puntonim/py-timeexecution.git"
reference = "lazy-init-tmp-3.4.0"

[[package]]
name = "timeout-decorator"
version = "0.4.1"
description = "Timeout decorator"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "tornado"
version = "4.5.3"
description = "Tornado is a Python web framework and asynchronous networking library, originally developed at FriendFeed."
category = "main"
optional = true
python-versions = "*"

[package.dependencies]
certifi = "*"
singledispatch = "*"
backports-abc = ">=0.4"

[[package]]
name = "traitlets"
version = "4.3.3"
description = "Traitlets Python config system"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
enum34 = {version = "*", markers = "python_version == \"2.7\""}
six = "*"
ipython-genutils = "*"
decorator = "*"

[package.extras]
test = ["pytest", "mock"]

[[package]]
name = "twisted"
version = "18.9.0"
description = "An asynchronous networking framework written in Python"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
hyperlink = ">=17.1.1"
"zope.interface" = ">=4.4.2"
constantly = ">=15.1"
PyHamcrest = ">=1.9.0"
Automat = ">=0.3.0"
incremental = ">=16.10.1"
attrs = ">=17.4.0"

[package.extras]
tls = ["pyopenssl (>=16.0.0)", "service-identity", "idna (>=0.6,!=2.3)"]
macos_platform = ["pyobjc-core", "pyobjc-framework-cfnetwork", "pyobjc-framework-cocoa", "pyopenssl (>=16.0.0)", "service-identity", "idna (>=0.6,!=2.3)", "pyasn1", "cryptography (>=1.5)", "appdirs (>=1.4.0)", "soappy", "pyserial (>=3.0)", "h2 (>=3.0,<4.0)", "priority (>=1.1.0,<2.0)"]
conch = ["pyasn1", "cryptography (>=1.5)", "appdirs (>=1.4.0)"]
http2 = ["h2 (>=3.0,<4.0)", "priority (>=1.1.0,<2.0)"]
dev = ["pyflakes (>=1.0.0)", "twisted-dev-tools (>=0.0.2)", "python-subunit", "sphinx (>=1.3.1)", "towncrier (>=17.4.0)", "twistedchecker (>=0.4.0)", "pydoctor (>=16.2.0)"]
osx_platform = ["pyobjc-core", "pyobjc-framework-cfnetwork", "pyobjc-framework-cocoa", "pyopenssl (>=16.0.0)", "service-identity", "idna (>=0.6,!=2.3)", "pyasn1", "cryptography (>=1.5)", "appdirs (>=1.4.0)", "soappy", "pyserial (>=3.0)", "h2 (>=3.0,<4.0)", "priority (>=1.1.0,<2.0)"]
all_non_platform = ["pyopenssl (>=16.0.0)", "service-identity", "idna (>=0.6,!=2.3)", "pyasn1", "cryptography (>=1.5)", "appdirs (>=1.4.0)", "soappy", "pyserial (>=3.0)", "h2 (>=3.0,<4.0)", "priority (>=1.1.0,<2.0)"]
windows_platform = ["pywin32", "pyopenssl (>=16.0.0)", "service-identity", "idna (>=0.6,!=2.3)", "pyasn1", "cryptography (>=1.5)", "appdirs (>=1.4.0)", "soappy", "pyserial (>=3.0)", "h2 (>=3.0,<4.0)", "priority (>=1.1.0,<2.0)"]
serial = ["pyserial (>=3.0)"]
soap = ["soappy"]

[[package]]
name = "typing"
version = "3.10.0.0"
description = "Type Hints for Python"
category = "main"
optional = true
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <3.5"

[[package]]
name = "ua-parser"
version = "0.9.0"
description = "Python port of Browserscope's user agent parser"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "unidecode"
version = "1.1.1"
description = "ASCII transliterations of Unicode text"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "uritools"
version = "2.2.0"
description = "RFC 3986 compliant, Unicode-aware, scheme-agnostic replacement for urlparse"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
ipaddress = {version = "*", markers = "python_version == \"2.7\""}

[[package]]
name = "urllib3"
version = "1.24.3"
description = "HTTP library with thread-safe connection pooling, file post, and more."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4"

[package.extras]
secure = ["pyOpenSSL (>=0.14)", "cryptography (>=1.3.4)", "idna (>=2.0.0)", "certifi", "ipaddress"]
socks = ["PySocks (>=1.5.6,!=1.5.7,<2.0)"]

[[package]]
name = "validators"
version = "0.14.2"
description = "Python Data Validation for Humans™."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
six = ">=1.4.0"
decorator = ">=3.4.0"

[package.extras]
test = ["pytest (>=2.2.3)", "flake8 (>=2.4.0)", "isort (>=4.2.2)"]

[[package]]
name = "vcrpy"
version = "3.0.0"
description = "Automatically mock your HTTP interactions to simplify and speed up testing"
category = "main"
optional = true
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[package.dependencies]
PyYAML = "*"
contextlib2 = {version = "*", markers = "python_version == \"2.7\""}
six = ">=1.5"
mock = {version = "*", markers = "python_version == \"2.7\""}
wrapt = "*"

[[package]]
name = "vine"
version = "1.3.0"
description = "Promises, promises, promises."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "w3lib"
version = "1.21.0"
description = "Library of web-related functions"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
six = ">=1.4.1"

[[package]]
name = "wand"
version = "0.5.9"
description = "Ctypes-based simple MagickWand API binding for Python"
category = "main"
optional = false
python-versions = "*"

[package.extras]
test = ["pytest (>=2.3.0)", "pytest-xdist (>=1.8)", "psutil (>=1.0.1)"]
doc = ["Sphinx (>=1.0)"]

[[package]]
name = "wcwidth"
version = "0.1.8"
description = "Measures number of Terminal column cells of wide-character codes"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "webargs"
version = "5.5.3"
description = "Declarative parsing and validation of HTTP request objects, with built-in support for popular web frameworks, including Flask, Django, Bottle, Tornado, Pyramid, webapp2, Falcon, and aiohttp."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
simplejson = ">=2.1.0"
marshmallow = ">=2.15.2"

[package.extras]
docs = ["Sphinx (==2.2.0)", "sphinx-issues (==1.2.0)", "sphinx-typlog-theme (==0.7.3)", "Flask (>=0.12.2)", "Django (>=1.11.16)", "bottle (>=0.12.13)", "tornado (>=4.5.2)", "pyramid (>=1.9.1)", "webapp2 (>=3.0.0b1)", "falcon (>=1.4.0,<2.0)", "aiohttp (>=3.0.0)"]
tests = ["pytest", "mock", "webtest (==2.0.33)", "Flask (>=0.12.2)", "Django (>=1.11.16)", "bottle (>=0.12.13)", "tornado (>=4.5.2)", "pyramid (>=1.9.1)", "webapp2 (>=3.0.0b1)", "falcon (>=1.4.0,<2.0)", "webtest-aiohttp (==2.0.0)", "pytest-aiohttp (>=0.3.0)", "aiohttp (>=3.0.0)"]
lint = ["flake8 (==3.7.8)", "pre-commit (>=1.17,<2.0)", "mypy (==0.730)", "flake8-bugbear (==19.8.0)"]
dev = ["pytest", "mock", "webtest (==2.0.33)", "Flask (>=0.12.2)", "Django (>=1.11.16)", "bottle (>=0.12.13)", "tornado (>=4.5.2)", "pyramid (>=1.9.1)", "webapp2 (>=3.0.0b1)", "falcon (>=1.4.0,<2.0)", "flake8 (==3.7.8)", "pre-commit (>=1.17,<2.0)", "tox", "webtest-aiohttp (==2.0.0)", "pytest-aiohttp (>=0.3.0)", "aiohttp (>=3.0.0)", "mypy (==0.730)", "flake8-bugbear (==19.8.0)"]
frameworks = ["Flask (>=0.12.2)", "Django (>=1.11.16)", "bottle (>=0.12.13)", "tornado (>=4.5.2)", "pyramid (>=1.9.1)", "webapp2 (>=3.0.0b1)", "falcon (>=1.4.0,<2.0)", "aiohttp (>=3.0.0)"]

[[package]]
name = "webassets"
version = "2.0"
description = "Media asset management for Python, with glue code for various web frameworks"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "webencodings"
version = "0.5.1"
description = "Character encoding aliases for legacy web content"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "werkzeug"
version = "0.16.1"
description = "The comprehensive WSGI web application library."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[package.extras]
watchdog = ["watchdog"]
dev = ["pytest", "coverage", "tox", "sphinx", "pallets-sphinx-themes", "sphinx-issues"]
termcolor = ["termcolor"]

[[package]]
name = "whichcraft"
version = "0.6.1"
description = "This package provides cross-platform cross-python shutil.which functionality."
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "win-unicode-console"
version = "0.5"
description = "Enable Unicode input and display when running Python from Windows console."
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "workflow"
version = "2.1.6"
description = "Simple workflows for Python"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
configobj = ">4.7.0"
enum34 = ">=1.0.4"
autosemver = ">=0.5,<1.0"
blinker = ">=1.3"
six = "*"

[package.extras]
docs = ["Sphinx (>=1.4.2)"]
all = ["Sphinx (>=1.4.2)", "coverage (>=4.0)", "mock (>=1.0.0)", "isort (>=4.2.2)", "pytest-cache (>=1.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)"]
tests = ["coverage (>=4.0)", "mock (>=1.0.0)", "isort (>=4.2.2)", "pytest-cache (>=1.0)", "pytest-cov (>=1.8.0)", "pytest-pep8 (>=1.0.6)", "pytest (>=2.8.0)"]

[[package]]
name = "wrapt"
version = "1.12.0"
description = "Module for decorators, wrappers and monkey patching."
category = "main"
optional = true
python-versions = "*"

[[package]]
name = "wtforms"
version = "2.2.1"
description = "A flexible forms validation and rendering library for Python web development."
category = "main"
optional = false
python-versions = "*"

[package.extras]
locale = ["Babel (>=1.3)"]

[[package]]
name = "wtforms-alchemy"
version = "0.16.9"
description = "Generates WTForms forms from SQLAlchemy models."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
SQLAlchemy = ">=1.0"
six = ">=1.4.1"
WTForms-Components = ">=0.9.2"
SQLAlchemy-Utils = ">=0.32.6"
WTForms = ">=1.0.4"

[package.extras]
i18n = ["SQLAlchemy-i18n (>=0.8.2)"]
color = ["colour (>=0.0.4)"]
babel = ["Babel (>=1.3)"]
phone = ["phonenumbers (>=5.9.2)"]
intervals = ["intervals (>=0.2.0)"]
arrow = ["arrow (>=0.3.4)"]
test = ["enum34", "pytest (>=2.3)", "Pygments (>=1.2)", "Jinja2 (>=2.3)", "docutils (>=0.10)", "flake8 (>=2.4.0)", "flexmock (>=0.9.7)", "isort (>=3.9.6)", "natsort (==3.5.6)", "WTForms-Test (>=0.1.1)", "Babel (>=1.3)", "arrow (>=0.3.4)", "phonenumbers (>=5.9.2)", "intervals (>=0.2.0)", "passlib (>=1.6,<2.0)", "colour (>=0.0.4)", "SQLAlchemy-i18n (>=0.8.2)", "python-dateutil"]
timezone = ["python-dateutil"]
password = ["passlib (>=1.6,<2.0)"]

[[package]]
name = "wtforms-components"
version = "0.10.4"
description = "Additional fields, validators and widgets for WTForms."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
intervals = ">=0.6.0"
six = ">=1.4.1"
WTForms = ">=1.0.4"
validators = ">=0.5.0"

[package.extras]
color = ["colour (>=0.0.4)"]
test = ["pytest (>=2.2.3)", "flexmock (>=0.9.7)", "WTForms-Test (>=0.1.1)", "flake8 (>=2.4.0)", "isort (>=4.2.2)", "colour (>=0.0.4)", "ipaddr", "python-dateutil"]
ipaddress = ["ipaddr"]
timezone = ["python-dateutil"]

[[package]]
name = "xrootdpyfs"
version = "0.1.6"
description = "XRootDPyFS is a PyFilesystem interface to XRootD."
category = "main"
optional = true
python-versions = "*"
develop = true

[package.dependencies]
fs = ">=0.4.0,<2.0"

[package.source]
type = "git"
url = "https://github.com/inspirehep/xrootdpyfs.git"
reference = "master"

[[package]]
name = "zipp"
version = "1.2.0"
description = "Backport of pathlib-compatible object wrapper for zip files"
category = "main"
optional = false
python-versions = ">=2.7"

[package.dependencies]
contextlib2 = {version = "*", markers = "python_version < \"3.4\""}

[package.extras]
docs = ["sphinx", "jaraco.packaging (>=3.2)", "rst.linker (>=1.9)"]
testing = ["pathlib2", "unittest2", "jaraco.itertools", "func-timeout"]

[[package]]
name = "zope.interface"
version = "4.7.1"
description = "Interfaces for Python"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[package.extras]
test = ["zope.event"]
docs = ["sphinx", "repoze.sphinx.autointerface"]
testing = ["coverage", "nose", "zope.event"]

[extras]
worker-node = ["flower", "superlance", "tornado"]
all = ["coverage", "docutils", "flake8-future-import", "flower", "freezegun", "gunicorn", "hepcrawl", "honcho", "ipdb", "mock", "pytest", "pytest-cov", "pytest-vcr", "requests-mock", "sphinx", "superlance", "tornado"]
crawler-node = ["hepcrawl"]
web-node = ["gunicorn", "honcho"]
tests = ["coverage", "flake8-future-import", "freezegun", "mock", "pytest", "pytest-cov", "pytest-vcr", "requests-mock"]
xrootd = ["xrootdpyfs", "invenio-xrootd"]
docs = ["docutils", "sphinx"]
build-node = ["ipdb"]

[metadata]
lock-version = "1.1"
python-versions = ">=2.7,<3.0"
content-hash = "6543bbda329d38041afe9a8a5c925eb42cc504ae3dd9b1be37380d42aa41682f"

[metadata.files]
alabaster = []
alembic = []
amqp = []
appnope = []
argcomplete = []
arrow = []
atomicwrites = []
attrs = []
automat = []
autosemver = []
babel = []
backoff = []
backports-abc = []
"backports.functools-lru-cache" = []
"backports.shutil-get-terminal-size" = []
"backports.tempfile" = []
"backports.weakref" = []
base32-lib = []
beautifulsoup4 = []
billiard = []
binaryornot = []
bleach = []
blinker = []
boto3 = []
botocore = []
bump2version = []
celery = []
certifi = []
cffi = []
chardet = []
click = []
click-spinner = []
colorama = []
configobj = []
configparser = []
constantly = []
contextlib2 = []
cookiecutter = []
coverage = []
cryptography = []
cssselect = []
decorator = []
dictdiffer = []
docutils = []
dojson = []
dulwich = []
editdistance = []
elasticsearch = []
elasticsearch-dsl = []
entrypoints = []
enum34 = []
flake8 = []
flake8-future-import = []
flask = []
flask-admin = []
flask-alembic = []
flask-assets = []
flask-babelex = []
flask-breadcrumbs = []
flask-caching = []
flask-celeryext = []
flask-cli = []
flask-collect = []
flask-cors = []
flask-gravatar = []
flask-kvsession = []
flask-login = []
flask-mail = []
flask-menu = []
flask-oauthlib = []
flask-principal = []
flask-security = []
flask-shell-ipython = []
Flask-SQLAlchemy = []
flask-webpackext = []
flask-wtf = []
flower = []
fqn-decorators = []
freezegun = []
fs = []
ftfy = []
ftputil = []
funcsigs = []
functools32 = []
furl = []
future = []
futures = []
fuzzy = []
gunicorn = []
harvestingkit = []
hepcrawl = []
honcho = []
html5lib = []
htmlparser = []
httplib2 = []
httpretty = []
hyperlink = []
idna = []
idutils = []
imagesize = []
importlib-metadata = []
incremental = []
infinity = []
influxdb = []
inspire-crawler = []
inspire-dojson = []
inspire-idutils = []
inspire-json-merger = []
inspire-matcher = []
inspire-query-parser = []
inspire-schemas = []
inspire-service-orcid = []
inspire-utils = []
intervals = []
invenio-access = []
invenio-accounts = []
invenio-admin = []
invenio-assets = []
invenio-base = []
invenio-cache = []
invenio-celery = []
invenio-classifier = []
invenio-config = []
invenio-db = []
invenio-files-rest = []
invenio-i18n = []
invenio-indexer = []
invenio-jsonschemas = []
invenio-mail = []
invenio-oaiharvester = []
invenio-oauth2server = []
invenio-oauthclient = []
invenio-pidstore = []
invenio-records = []
invenio-records-files = []
invenio-records-rest = []
invenio-records-ui = []
invenio-rest = []
invenio-search = []
invenio-userprofiles = []
invenio-workflows = []
invenio-workflows-files = []
invenio-workflows-ui = []
invenio-xrootd = []
ipaddr = []
ipaddress = []
ipdb = []
ipython = []
ipython-genutils = []
isbnid = []
isbnid-fork = []
isbnlib = []
isodate = []
itsdangerous = []
jinja2 = []
jinja2-time = []
jmespath = []
json-merger = []
jsonpatch = []
jsonpointer = []
jsonref = []
jsonresolver = []
jsonschema = []
kombu = []
langdetect = []
latexcodec = []
linkheader = []
lxml = []
mako = []
markupsafe = []
marshmallow = []
maxminddb = []
maxminddb-geolite2 = []
mccabe = []
mock = []
more-itertools = []
msgpack = []
munkres = []
nameparser = []
node-semver = []
numpy = []
oauthlib = []
orcid = []
orderedmultidict = []
packaging = []
parsel = []
passlib = []
pathlib2 = []
pbr = []
pexpect = []
pickleshare = []
pkgsettings = []
plotextractor = []
pluggy = []
poyo = []
prompt-toolkit = []
psycopg2-binary = []
ptyprocess = []
py = []
pyasn1 = []
pyasn1-modules = []
pybtex = []
pycodestyle = []
pycountry = []
pycparser = []
pydispatcher = []
pyflakes = []
pygments = []
pyhamcrest = []
pyjwt = []
pylatexenc = []
pynpm = []
pyopenssl = []
pyparsing = []
pypdf2 = []
pypeg2 = []
pypydispatcher = []
pyrsistent = []
pytest = []
pytest-cov = []
pytest-runner = []
pytest-vcr = []
python-dateutil = []
python-editor = []
python-logstash = []
python-magic = []
python-redis-lock = []
python-scrapyd-api = []
pytz = []
pywebpack = []
pyyaml = []
queuelib = []
raven = []
rdflib = []
redis = []
refextract = []
requests = []
requests-mock = []
requests-oauthlib = []
rfc3987 = []
rt = []
s3transfer = []
scandir = []
scrapy = []
scrapy-crawl-once = []
scrapy-sentry = []
scrapyd = []
scrapyd-client = []
sentry-sdk = []
service-identity = []
setproctitle = []
sickle = []
simplegeneric = []
simplejson = []
simplekv = []
singledispatch = []
six = []
snowballstemmer = []
soupsieve = []
speaklater = []
sphinx = []
sqlalchemy = []
sqlalchemy-continuum = []
sqlalchemy-utils = []
sqlitedict = []
structlog = []
subprocess32 = []
superlance = []
supervisor = []
sword2 = []
timeexecution = []
timeout-decorator = []
tornado = []
traitlets = []
twisted = []
typing = []
ua-parser = []
unidecode = []
uritools = []
urllib3 = []
validators = []
vcrpy = []
vine = []
w3lib = []
wand = []
wcwidth = []
webargs = []
webassets = []
webencodings = []
werkzeug = []
whichcraft = []
win-unicode-console = []
workflow = []
wrapt = []
wtforms = []
wtforms-alchemy = []
wtforms-components = []
xrootdpyfs = []
zipp = []
"zope.interface" = []
