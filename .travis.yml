# -*- coding: utf-8 -*-
#
# This file is part of INSPIRE.
# Copyright (C) 2016 CERN.
#
# INSPIRE is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# INSPIRE is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with INSPIRE. If not, see <http://www.gnu.org/licenses/>.
#
# In applying this licence, CERN does not waive the privileges and immunities
# granted to it by virtue of its status as an Intergovernmental Organization
# or submit itself to any jurisdiction.

notifications:
  email: false

sudo: required

language: python

services:
  - docker

env:
  global:
    - DOCKER_DATA="$HOME/docker_data"
    - DOCKER_VERSION=1.12.0-0~trusty
    - DOCKER_COMPOSE_VERSION=1.8.0
  matrix:
    - SUITE=integration
    - SUITE=workflows
    - SUITE=disambiguation
    - SUITE=acceptance
    - SUITE=pep8
    - SUITE=unit
    - SUITE=integration_stable
    - SUITE=workflows_stable
    - SUITE=disambiguation_stable
    - SUITE=acceptance_stable
    - SUITE=pep8_stable
    - SUITE=unit_stable


matrix:
  fast_finish: true

python:
  - "2.7"

before_install:
  - travis_retry pip install coveralls
  # List available docker versions.
  - apt-cache madison docker-engine
  # Update Docker. See: https://graysonkoonce.com/managing-docker-and-docker-compose-versions-on-travis-ci/.
  - sudo apt-get -o Dpkg::Options::="--force-confnew" install -y docker-engine=${DOCKER_VERSION}
  # Add docker-compose at the version specified in ENV.
  - sudo rm -f /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin

install:
  - travis_retry docker-compose pull
  - travis_retry docker-compose build
  - if [[ $string == *"stable"* ]]; then echo should be stable else echo should be unstable fi
  - if [[ $string == *"stable"* ]]; then
        travis_retry docker-compose -f docker-compose.deps.yml run --rm pip_stable
    else
        travis_retry docker-compose -f docker-compose.deps.yml run --rm pip
    fi
  - docker-compose -f docker-compose.deps.yml run --rm assets

script:
  - "docker-compose -f docker-compose.test.yml run --rm ${SUITE}"

after_script:
  # Killing via SIGTERM in order to trigger atexit and dump coverage information in WSGI
  - "docker-compose -f docker-compose.test.yml kill -s SIGTERM"
  - "docker-compose -f docker-compose.test.yml rm -f"

after_success:
  - mv .coverage .coverage.tests
  - coverage combine
  # Coverage report contains Docker paths. We replace them, so that we can run Coveralls.
  - sed -i 's@\"/code/@'"\"$(pwd)/"'@g' .coverage
  - coveralls
