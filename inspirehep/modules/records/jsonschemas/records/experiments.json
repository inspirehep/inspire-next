{
    "$schema": "http://json-schema.org/schema#",
    "properties": {
        "self": {
          "description": "Url of the record itself",
          "title": "Url of the record",
          "$ref": "json_reference.json"
        },
        "accelerator": {
            "enum": [
                "We need one"
            ],
            "title": "Accelerator",
            "type": "string"
        },
        "affiliation": {
            "description": "Institution ICN",
            "title": "Affiliation",
            "type": "array"
        },
        "affiliation_record": {
            "title": "Institution record URI",
            "$ref": "json_reference.json"
        },
        "collaboration": {
            "title": "Collaboration",
            "type": "string"
        },
        "collaboration_alternative_names": {
            "title": "Collaboration alternative names",
            "type": "array",
            "items": {
                "title": "Collaboration alternative name",
                "type": "string"
            },
            "uniqueItems": true
        },
        "contact_details": {
            "items": {
                "$ref": "elements/contact.json"
            },
            "type": "array",
            "uniqueItems": true
        },
        "curated_relation": {
            "title": "Curated relation",
            "type": "boolean"
        },
        "date_approved": {
            "format": "date",
            "title": "Date approved",
            "type": "string"
        },
        "date_cancelled": {
            "format": "date",
            "title": "Date cancelled",
            "type": "string"
        },
        "date_completed": {
            "format": "date",
            "title": "Date completed",
            "type": "string"
        },
        "date_proposed": {
            "format": "date",
            "title": "Date proposed",
            "type": "string"
        },
        "date_started": {
            "format": "date",
            "title": "Date started",
            "type": "string"
        },
        "description": {
            "title": "Description",
            "type": "array"
        },
        "field_code": {
            "items": {
                "enum": [
                    "usual",
                    "arXiv",
                    "list",
                    "astro-ph",
                    "physics",
                    "ASTRO-PH"
                ],
                "type": "string"
            },
            "title": "Field code",
            "type": "array",
            "uniqueItems": true
        },
        "free_keywords": {
            "items": {
                "title": "Free keyword",
                "type": "string"
            },
            "title": "Free keywords",
            "type": "array",
            "uniqueItems": true
        },
        "hidden_note": {
            "title": "Hidden note",
            "type": "string"
        },
        "name": {
            "title": "Experiment name",
            "type": "string"
        },
        "nonpublic_note": {
            "description": "FIXME: difference from hidden_note!?",
            "title": "Non public note",
            "type": "string"
        },
        "other_names": {
            "items": {
                "title": "Other name",
                "type": "string"
            },
            "title": "Other names",
            "type": "array",
            "uniqueItems": true
        },
        "public_note": {
            "title": "Public note",
            "type": "string"
        },
        "related_experiments": {
            "items": {
                "properties": {
                    "curated_relation": {
                        "title": "Is the relation curated?",
                        "type": "boolean"
                    },
                    "name": {
                        "title": "Name of related experiment",
                        "type": "string"
                    },
                    "relation": {
                        "description": "FIXME: shall we simply store preceeding experiment and generate the symmetric relation automatically?",
                        "enum": [
                            "predecessor",
                            "successor"
                        ],
                        "title": "Type of relation",
                        "type": "string"
                    },
                    "record": {
                        "title": "URI for the related experiment record",
                        "$ref": "json_reference.json"
                    }
                },
                "type": "object"
            },
            "title": "Related experiments",
            "type": "array",
            "uniqueItems": true
        },
        "spokespersons": {
            "items": {
                "properties": {
                    "curated_relation": {
                        "title": "Is the relation curated?",
                        "type": "boolean"
                    },
                    "current": {
                        "title": "Is current Spokesperson?",
                        "type": "boolean"
                    },
                    "end_date": {
                        "format": "date",
                        "title": "End date",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "start_date": {
                        "format": "date",
                        "title": "Start date",
                        "type": "string"
                    },
                    "record": {
                        "title": "URI for the person record",
                        "$ref": "json_reference.json"
                    }
                },
                "required": [
                    "name"
                ],
                "title": "Spokesperson",
                "type": "object"
            },
            "title": "Spokespersons",
            "type": "array",
            "uniqueItems": true
        },
        "title": {
            "type": "object",
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "subtitle": {
                        "type": "string"
                    },
                    "source": {
                        "type": "string"
                    }
                },
            "type":"array",
            "title": "Title"
        },
        "urls": {
            "$ref": "elements/urls.json"
        }
    },
    "title": "Experiment",
    "type": "object"
}
